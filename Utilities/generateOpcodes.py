opcodeTable1 = """<td><abbr title="No Operation">NOP</abbr></td>
<td><abbr title="Load 16-bit immediate into BC">LD BC,nn</abbr></td>
<td><abbr title="Save A to address pointed by BC">LD (BC),A</abbr></td>
<td><abbr title="Increment 16-bit BC">INC BC</abbr></td>
<td><abbr title="Increment B">INC B</abbr></td>
<td><abbr title="Decrement B">DEC B</abbr></td>
<td><abbr title="Load 8-bit immediate into B">LD B,n</abbr></td>
<td><abbr title="Rotate A left with carry">RLC A</abbr></td>
<td><abbr title="Save SP to given address">LD (nn),SP</abbr></td>
<td><abbr title="Add 16-bit BC to HL">ADD HL,BC</abbr></td>
<td><abbr title="Load A from address pointed to by BC">LD A,(BC)</abbr></td>
<td><abbr title="Decrement 16-bit BC">DEC BC</abbr></td>
<td><abbr title="Increment C">INC C</abbr></td>
<td><abbr title="Decrement C">DEC C</abbr></td>
<td><abbr title="Load 8-bit immediate into C">LD C,n</abbr></td>
<td><abbr title="Rotate A right with carry">RRC A</abbr></td>
<td><abbr title="Stop processor">STOP</abbr></td>
<td><abbr title="Load 16-bit immediate into DE">LD DE,nn</abbr></td>
<td><abbr title="Save A to address pointed by DE">LD (DE),A</abbr></td>
<td><abbr title="Increment 16-bit DE">INC DE</abbr></td>
<td><abbr title="Increment D">INC D</abbr></td>
<td><abbr title="Decrement D">DEC D</abbr></td>
<td><abbr title="Load 8-bit immediate into D">LD D,n</abbr></td>
<td><abbr title="Rotate A left">RL A</abbr></td>
<td><abbr title="Relative jump by signed immediate">JR n</abbr></td>
<td><abbr title="Add 16-bit DE to HL">ADD HL,DE</abbr></td>
<td><abbr title="Load A from address pointed to by DE">LD A,(DE)</abbr></td>
<td><abbr title="Decrement 16-bit DE">DEC DE</abbr></td>
<td><abbr title="Increment E">INC E</abbr></td>
<td><abbr title="Decrement E">DEC E</abbr></td>
<td><abbr title="Load 8-bit immediate into E">LD E,n</abbr></td>
<td><abbr title="Rotate A right">RR A</abbr></td>
<td><abbr title="Relative jump by signed immediate if last result was not zero">JR NZ,n</abbr></td>
<td><abbr title="Load 16-bit immediate into HL">LD HL,nn</abbr></td>
<td><abbr title="Save A to address pointed by HL, and increment HL">LDI (HL),A</abbr></td>
<td><abbr title="Increment 16-bit HL">INC HL</abbr></td>
<td><abbr title="Increment H">INC H</abbr></td>
<td><abbr title="Decrement H">DEC H</abbr></td>
<td><abbr title="Load 8-bit immediate into H">LD H,n</abbr></td>
<td><abbr title="Adjust A for BCD addition">DAA</abbr></td>
<td><abbr title="Relative jump by signed immediate if last result was zero">JR Z,n</abbr></td>
<td><abbr title="Add 16-bit HL to HL">ADD HL,HL</abbr></td>
<td><abbr title="Load A from address pointed to by HL, and increment HL">LDI A,(HL)</abbr></td>
<td><abbr title="Decrement 16-bit HL">DEC HL</abbr></td>
<td><abbr title="Increment L">INC L</abbr></td>
<td><abbr title="Decrement L">DEC L</abbr></td>
<td><abbr title="Load 8-bit immediate into L">LD L,n</abbr></td>
<td><abbr title="Complement (logical NOT) on A">CPL</abbr></td>
<td><abbr title="Relative jump by signed immediate if last result caused no carry">JR NC,n</abbr></td>
<td><abbr title="Load 16-bit immediate into SP">LD SP,nn</abbr></td>
<td><abbr title="Save A to address pointed by HL, and decrement HL">LDD (HL),A</abbr></td>
<td><abbr title="Increment 16-bit HL">INC SP</abbr></td>
<td><abbr title="Increment value pointed by HL">INC (HL)</abbr></td>
<td><abbr title="Decrement value pointed by HL">DEC (HL)</abbr></td>
<td><abbr title="Load 8-bit immediate into address pointed by HL">LD (HL),n</abbr></td>
<td><abbr title="Set carry flag">SCF</abbr></td>
<td><abbr title="Relative jump by signed immediate if last result caused carry">JR C,n</abbr></td>
<td><abbr title="Add 16-bit SP to HL">ADD HL,SP</abbr></td>
<td><abbr title="Load A from address pointed to by HL, and decrement HL">LDD A,(HL)</abbr></td>
<td><abbr title="Decrement 16-bit SP">DEC SP</abbr></td>
<td><abbr title="Increment A">INC A</abbr></td>
<td><abbr title="Decrement A">DEC A</abbr></td>
<td><abbr title="Load 8-bit immediate into A">LD A,n</abbr></td>
<td><abbr title="Clear carry flag">CCF</abbr></td>
<td><abbr title="Copy B to B">LD B,B</abbr></td>
<td><abbr title="Copy C to B">LD B,C</abbr></td>
<td><abbr title="Copy D to B">LD B,D</abbr></td>
<td><abbr title="Copy E to B">LD B,E</abbr></td>
<td><abbr title="Copy H to B">LD B,H</abbr></td>
<td><abbr title="Copy L to B">LD B,L</abbr></td>
<td><abbr title="Copy value pointed by HL to B">LD B,(HL)</abbr></td>
<td><abbr title="Copy A to B">LD B,A</abbr></td>
<td><abbr title="Copy B to C">LD C,B</abbr></td>
<td><abbr title="Copy C to C">LD C,C</abbr></td>
<td><abbr title="Copy D to C">LD C,D</abbr></td>
<td><abbr title="Copy E to C">LD C,E</abbr></td>
<td><abbr title="Copy H to C">LD C,H</abbr></td>
<td><abbr title="Copy L to C">LD C,L</abbr></td>
<td><abbr title="Copy value pointed by HL to C">LD C,(HL)</abbr></td>
<td><abbr title="Copy A to C">LD C,A</abbr></td>
<td><abbr title="Copy B to D">LD D,B</abbr></td>
<td><abbr title="Copy C to D">LD D,C</abbr></td>
<td><abbr title="Copy D to D">LD D,D</abbr></td>
<td><abbr title="Copy E to D">LD D,E</abbr></td>
<td><abbr title="Copy H to D">LD D,H</abbr></td>
<td><abbr title="Copy L to D">LD D,L</abbr></td>
<td><abbr title="Copy value pointed by HL to D">LD D,(HL)</abbr></td>
<td><abbr title="Copy A to D">LD D,A</abbr></td>
<td><abbr title="Copy B to E">LD E,B</abbr></td>
<td><abbr title="Copy C to E">LD E,C</abbr></td>
<td><abbr title="Copy D to E">LD E,D</abbr></td>
<td><abbr title="Copy E to E">LD E,E</abbr></td>
<td><abbr title="Copy H to E">LD E,H</abbr></td>
<td><abbr title="Copy L to E">LD E,L</abbr></td>
<td><abbr title="Copy value pointed by HL to E">LD E,(HL)</abbr></td>
<td><abbr title="Copy A to E">LD E,A</abbr></td>
<td><abbr title="Copy B to H">LD H,B</abbr></td>
<td><abbr title="Copy C to H">LD H,C</abbr></td>
<td><abbr title="Copy D to H">LD H,D</abbr></td>
<td><abbr title="Copy E to H">LD H,E</abbr></td>
<td><abbr title="Copy H to H">LD H,H</abbr></td>
<td><abbr title="Copy L to H">LD H,L</abbr></td>
<td><abbr title="Copy value pointed by HL to H">LD H,(HL)</abbr></td>
<td><abbr title="Copy A to H">LD H,A</abbr></td>
<td><abbr title="Copy B to L">LD L,B</abbr></td>
<td><abbr title="Copy C to L">LD L,C</abbr></td>
<td><abbr title="Copy D to L">LD L,D</abbr></td>
<td><abbr title="Copy E to L">LD L,E</abbr></td>
<td><abbr title="Copy H to L">LD L,H</abbr></td>
<td><abbr title="Copy L to L">LD L,L</abbr></td>
<td><abbr title="Copy value pointed by HL to L">LD L,(HL)</abbr></td>
<td><abbr title="Copy A to L">LD L,A</abbr></td>
<td><abbr title="Copy B to address pointed by HL">LD (HL),B</abbr></td>
<td><abbr title="Copy C to address pointed by HL">LD (HL),C</abbr></td>
<td><abbr title="Copy D to address pointed by HL">LD (HL),D</abbr></td>
<td><abbr title="Copy E to address pointed by HL">LD (HL),E</abbr></td>
<td><abbr title="Copy H to address pointed by HL">LD (HL),H</abbr></td>
<td><abbr title="Copy L to address pointed by HL">LD (HL),L</abbr></td>
<td><abbr title="Halt processor">HALT</abbr></td>
<td><abbr title="Copy A to address pointed by HL">LD (HL),A</abbr></td>
<td><abbr title="Copy B to A">LD A,B</abbr></td>
<td><abbr title="Copy C to A">LD A,C</abbr></td>
<td><abbr title="Copy D to A">LD A,D</abbr></td>
<td><abbr title="Copy E to A">LD A,E</abbr></td>
<td><abbr title="Copy H to A">LD A,H</abbr></td>
<td><abbr title="Copy L to A">LD A,L</abbr></td>
<td><abbr title="Copy value pointed by HL to A">LD A,(HL)</abbr></td>
<td><abbr title="Copy A to A">LD A,A</abbr></td>
<td><abbr title="Add B to A">ADD A,B</abbr></td>
<td><abbr title="Add C to A">ADD A,C</abbr></td>
<td><abbr title="Add D to A">ADD A,D</abbr></td>
<td><abbr title="Add E to A">ADD A,E</abbr></td>
<td><abbr title="Add H to A">ADD A,H</abbr></td>
<td><abbr title="Add L to A">ADD A,L</abbr></td>
<td><abbr title="Add value pointed by HL to A">ADD A,(HL)</abbr></td>
<td><abbr title="Add A to A">ADD A,A</abbr></td>
<td><abbr title="Add B and carry flag to A">ADC A,B</abbr></td>
<td><abbr title="Add C and carry flag to A">ADC A,C</abbr></td>
<td><abbr title="Add D and carry flag to A">ADC A,D</abbr></td>
<td><abbr title="Add E and carry flag to A">ADC A,E</abbr></td>
<td><abbr title="Add H and carry flag to A">ADC A,H</abbr></td>
<td><abbr title="Add and carry flag L to A">ADC A,L</abbr></td>
<td><abbr title="Add value pointed by HL and carry flag to A">ADC A,(HL)</abbr></td>
<td><abbr title="Add A and carry flag to A">ADC A,A</abbr></td>
<td><abbr title="Subtract B from A">SUB A,B</abbr></td>
<td><abbr title="Subtract C from A">SUB A,C</abbr></td>
<td><abbr title="Subtract D from A">SUB A,D</abbr></td>
<td><abbr title="Subtract E from A">SUB A,E</abbr></td>
<td><abbr title="Subtract H from A">SUB A,H</abbr></td>
<td><abbr title="Subtract L from A">SUB A,L</abbr></td>
<td><abbr title="Subtract value pointed by HL from A">SUB A,(HL)</abbr></td>
<td><abbr title="Subtract A from A">SUB A,A</abbr></td>
<td><abbr title="Subtract B and carry flag from A">SBC A,B</abbr></td>
<td><abbr title="Subtract C and carry flag from A">SBC A,C</abbr></td>
<td><abbr title="Subtract D and carry flag from A">SBC A,D</abbr></td>
<td><abbr title="Subtract E and carry flag from A">SBC A,E</abbr></td>
<td><abbr title="Subtract H and carry flag from A">SBC A,H</abbr></td>
<td><abbr title="Subtract and carry flag L from A">SBC A,L</abbr></td>
<td><abbr title="Subtract value pointed by HL and carry flag from A">SBC A,(HL)</abbr></td>
<td><abbr title="Subtract A and carry flag from A">SBC A,A</abbr></td>
<td><abbr title="Logical AND B against A">AND B</abbr></td>
<td><abbr title="Logical AND C against A">AND C</abbr></td>
<td><abbr title="Logical AND D against A">AND D</abbr></td>
<td><abbr title="Logical AND E against A">AND E</abbr></td>
<td><abbr title="Logical AND H against A">AND H</abbr></td>
<td><abbr title="Logical AND L against A">AND L</abbr></td>
<td><abbr title="Logical AND value pointed by HL against A">AND (HL)</abbr></td>
<td><abbr title="Logical AND A against A">AND A</abbr></td>
<td><abbr title="Logical XOR B against A">XOR B</abbr></td>
<td><abbr title="Logical XOR C against A">XOR C</abbr></td>
<td><abbr title="Logical XOR D against A">XOR D</abbr></td>
<td><abbr title="Logical XOR E against A">XOR E</abbr></td>
<td><abbr title="Logical XOR H against A">XOR H</abbr></td>
<td><abbr title="Logical XOR L against A">XOR L</abbr></td>
<td><abbr title="Logical XOR value pointed by HL against A">XOR (HL)</abbr></td>
<td><abbr title="Logical XOR A against A">XOR A</abbr></td>
<td><abbr title="Logical OR B against A">OR B</abbr></td>
<td><abbr title="Logical OR C against A">OR C</abbr></td>
<td><abbr title="Logical OR D against A">OR D</abbr></td>
<td><abbr title="Logical OR E against A">OR E</abbr></td>
<td><abbr title="Logical OR H against A">OR H</abbr></td>
<td><abbr title="Logical OR L against A">OR L</abbr></td>
<td><abbr title="Logical OR value pointed by HL against A">OR (HL)</abbr></td>
<td><abbr title="Logical OR A against A">OR A</abbr></td>
<td><abbr title="Compare B against A">CP B</abbr></td>
<td><abbr title="Compare C against A">CP C</abbr></td>
<td><abbr title="Compare D against A">CP D</abbr></td>
<td><abbr title="Compare E against A">CP E</abbr></td>
<td><abbr title="Compare H against A">CP H</abbr></td>
<td><abbr title="Compare L against A">CP L</abbr></td>
<td><abbr title="Compare value pointed by HL against A">CP (HL)</abbr></td>
<td><abbr title="Compare A against A">CP A</abbr></td>
<td><abbr title="Return if last result was not zero">RET NZ</abbr></td>
<td><abbr title="Pop 16-bit value from stack into BC">POP BC</abbr></td>
<td><abbr title="Absolute jump to 16-bit location if last result was not zero">JP NZ,nn</abbr></td>
<td><abbr title="Absolute jump to 16-bit location">JP nn</abbr></td>
<td><abbr title="Call routine at 16-bit location if last result was not zero">CALL NZ,nn</abbr></td>
<td><abbr title="Push 16-bit BC onto stack">PUSH BC</abbr></td>
<td><abbr title="Add 8-bit immediate to A">ADD A,n</abbr></td>
<td><abbr title="Call routine at address 0000h">RST 0</abbr></td>
<td><abbr title="Return if last result was zero">RET Z</abbr></td>
<td><abbr title="Return to calling routine">RET</abbr></td>
<td><abbr title="Absolute jump to 16-bit location if last result was zero">JP Z,nn</abbr></td>
<td><abbr title="Extended operations (two-byte instruction code)">Ext ops</abbr></td>
<td><abbr title="Call routine at 16-bit location if last result was zero">CALL Z,nn</abbr></td>
<td><abbr title="Call routine at 16-bit location">CALL nn</abbr></td>
<td><abbr title="Add 8-bit immediate and carry to A">ADC A,n</abbr></td>
<td><abbr title="Call routine at address 0008h">RST 8</abbr></td>
<td><abbr title="Return if last result caused no carry">RET NC</abbr></td>
<td><abbr title="Pop 16-bit value from stack into DE">POP DE</abbr></td>
<td><abbr title="Absolute jump to 16-bit location if last result caused no carry">JP NC,nn</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Call routine at 16-bit location if last result caused no carry">CALL NC,nn</abbr></td>
<td><abbr title="Push 16-bit DE onto stack">PUSH DE</abbr></td>
<td><abbr title="Subtract 8-bit immediate from A">SUB A,n</abbr></td>
<td><abbr title="Call routine at address 0010h">RST 10</abbr></td>
<td><abbr title="Return if last result caused carry">RET C</abbr></td>
<td><abbr title="Enable interrupts and return to calling routine">RETI</abbr></td>
<td><abbr title="Absolute jump to 16-bit location if last result caused carry">JP C,nn</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Call routine at 16-bit location if last result caused carry">CALL C,nn</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Subtract 8-bit immediate and carry from A">SBC A,n</abbr></td>
<td><abbr title="Call routine at address 0018h">RST 18</abbr></td>
<td><abbr title="Save A at address pointed to by (FF00h + 8-bit immediate)">LDH (n),A</abbr></td>
<td><abbr title="Pop 16-bit value from stack into HL">POP HL</abbr></td>
<td><abbr title="Save A at address pointed to by (FF00h + C)">LDH (C),A</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Push 16-bit HL onto stack">PUSH HL</abbr></td>
<td><abbr title="Logical AND 8-bit immediate against A">AND n</abbr></td>
<td><abbr title="Call routine at address 0020h">RST 20</abbr></td>
<td><abbr title="Add signed 8-bit immediate to SP">ADD SP,d</abbr></td>
<td><abbr title="Jump to 16-bit value pointed by HL">JP (HL)</abbr></td>
<td><abbr title="Save A at given 16-bit address">LD (nn),A</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Logical XOR 8-bit immediate against A">XOR n</abbr></td>
<td><abbr title="Call routine at address 0028h">RST 28</abbr></td>
<td><abbr title="Load A from address pointed to by (FF00h + 8-bit immediate)">LDH A,(n)</abbr></td>
<td><abbr title="Pop 16-bit value from stack into AF">POP AF</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="DIsable interrupts">DI</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Push 16-bit AF onto stack">PUSH AF</abbr></td>
<td><abbr title="Logical OR 8-bit immediate against A">OR n</abbr></td>
<td><abbr title="Call routine at address 0030h">RST 30</abbr></td>
<td><abbr title="Add signed 8-bit immediate to SP and save result in HL">LDHL SP,d</abbr></td>
<td><abbr title="Copy HL to SP">LD SP,HL</abbr></td>
<td><abbr title="Load A from given 16-bit address">LD A,(nn)</abbr></td>
<td><abbr title="Enable interrupts">EI</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Operation removed in this CPU">XX</abbr></td>
<td><abbr title="Compare 8-bit immediate against A">CP n</abbr></td>
<td><abbr title="Call routine at address 0038h">RST 38</abbr></td>"""

opcodeTable2 = """<td><abbr title="Rotate B left with carry">RLC B</abbr></td>
<td><abbr title="Rotate C left with carry">RLC C</abbr></td>
<td><abbr title="Rotate D left with carry">RLC D</abbr></td>
<td><abbr title="Rotate E left with carry">RLC E</abbr></td>
<td><abbr title="Rotate H left with carry">RLC H</abbr></td>
<td><abbr title="Rotate L left with carry">RLC L</abbr></td>
<td><abbr title="Rotate value pointed by HL left with carry">RLC (HL)</abbr></td>
<td><abbr title="Rotate A left with carry">RLC A</abbr></td>
<td><abbr title="Rotate B right with carry">RRC B</abbr></td>
<td><abbr title="Rotate C right with carry">RRC C</abbr></td>
<td><abbr title="Rotate D right with carry">RRC D</abbr></td>
<td><abbr title="Rotate E right with carry">RRC E</abbr></td>
<td><abbr title="Rotate H right with carry">RRC H</abbr></td>
<td><abbr title="Rotate L right with carry">RRC L</abbr></td>
<td><abbr title="Rotate value pointed by HL right with carry">RRC (HL)</abbr></td>
<td><abbr title="Rotate A right with carry">RRC A</abbr></td>
<td><abbr title="Rotate B left">RL B</abbr></td>
<td><abbr title="Rotate C left">RL C</abbr></td>
<td><abbr title="Rotate D left">RL D</abbr></td>
<td><abbr title="Rotate E left">RL E</abbr></td>
<td><abbr title="Rotate H left">RL H</abbr></td>
<td><abbr title="Rotate L left">RL L</abbr></td>
<td><abbr title="Rotate value pointed by HL left">RL (HL)</abbr></td>
<td><abbr title="Rotate A left">RL A</abbr></td>
<td><abbr title="Rotate B right">RR B</abbr></td>
<td><abbr title="Rotate C right">RR C</abbr></td>
<td><abbr title="Rotate D right">RR D</abbr></td>
<td><abbr title="Rotate E right">RR E</abbr></td>
<td><abbr title="Rotate H right">RR H</abbr></td>
<td><abbr title="Rotate L right">RR L</abbr></td>
<td><abbr title="Rotate value pointed by HL right">RR (HL)</abbr></td>
<td><abbr title="Rotate A right">RR A</abbr></td>
<td><abbr title="Shift B left preserving sign">SLA B</abbr></td>
<td><abbr title="Shift C left preserving sign">SLA C</abbr></td>
<td><abbr title="Shift D left preserving sign">SLA D</abbr></td>
<td><abbr title="Shift E left preserving sign">SLA E</abbr></td>
<td><abbr title="Shift H left preserving sign">SLA H</abbr></td>
<td><abbr title="Shift L left preserving sign">SLA L</abbr></td>
<td><abbr title="Shift value pointed by HL left preserving sign">SLA (HL)</abbr></td>
<td><abbr title="Shift A left preserving sign">SLA A</abbr></td>
<td><abbr title="Shift B right preserving sign">SRA B</abbr></td>
<td><abbr title="Shift C right preserving sign">SRA C</abbr></td>
<td><abbr title="Shift D right preserving sign">SRA D</abbr></td>
<td><abbr title="Shift E right preserving sign">SRA E</abbr></td>
<td><abbr title="Shift H right preserving sign">SRA H</abbr></td>
<td><abbr title="Shift L right preserving sign">SRA L</abbr></td>
<td><abbr title="Shift value pointed by HL right preserving sign">SRA (HL)</abbr></td>
<td><abbr title="Shift A right preserving sign">SRA A</abbr></td>
<td><abbr title="Swap nybbles in B">SWAP B</abbr></td>
<td><abbr title="Swap nybbles in C">SWAP C</abbr></td>
<td><abbr title="Swap nybbles in D">SWAP D</abbr></td>
<td><abbr title="Swap nybbles in E">SWAP E</abbr></td>
<td><abbr title="Swap nybbles in H">SWAP H</abbr></td>
<td><abbr title="Swap nybbles in L">SWAP L</abbr></td>
<td><abbr title="Swap nybbles in value pointed by HL">SWAP (HL)</abbr></td>
<td><abbr title="Swap nybbles in A">SWAP A</abbr></td>
<td><abbr title="Shift B right">SRL B</abbr></td>
<td><abbr title="Shift C right">SRL C</abbr></td>
<td><abbr title="Shift D right">SRL D</abbr></td>
<td><abbr title="Shift E right">SRL E</abbr></td>
<td><abbr title="Shift H right">SRL H</abbr></td>
<td><abbr title="Shift L right">SRL L</abbr></td>
<td><abbr title="Shift value pointed by HL right">SRL (HL)</abbr></td>
<td><abbr title="Shift A right">SRL A</abbr></td>
<td><abbr title="Test bit 0 of B">BIT 0,B</abbr></td>
<td><abbr title="Test bit 0 of C">BIT 0,C</abbr></td>
<td><abbr title="Test bit 0 of D">BIT 0,D</abbr></td>
<td><abbr title="Test bit 0 of E">BIT 0,E</abbr></td>
<td><abbr title="Test bit 0 of H">BIT 0,H</abbr></td>
<td><abbr title="Test bit 0 of L">BIT 0,L</abbr></td>
<td><abbr title="Test bit 0 of value pointed by HL">BIT 0,(HL)</abbr></td>
<td><abbr title="Test bit 0 of A">BIT 0,A</abbr></td>
<td><abbr title="Test bit 1 of B">BIT 1,B</abbr></td>
<td><abbr title="Test bit 1 of C">BIT 1,C</abbr></td>
<td><abbr title="Test bit 1 of D">BIT 1,D</abbr></td>
<td><abbr title="Test bit 1 of E">BIT 1,E</abbr></td>
<td><abbr title="Test bit 1 of H">BIT 1,H</abbr></td>
<td><abbr title="Test bit 1 of L">BIT 1,L</abbr></td>
<td><abbr title="Test bit 1 of value pointed by HL">BIT 1,(HL)</abbr></td>
<td><abbr title="Test bit 1 of A">BIT 1,A</abbr></td>
<td><abbr title="Test bit 2 of B">BIT 2,B</abbr></td>
<td><abbr title="Test bit 2 of C">BIT 2,C</abbr></td>
<td><abbr title="Test bit 2 of D">BIT 2,D</abbr></td>
<td><abbr title="Test bit 2 of E">BIT 2,E</abbr></td>
<td><abbr title="Test bit 2 of H">BIT 2,H</abbr></td>
<td><abbr title="Test bit 2 of L">BIT 2,L</abbr></td>
<td><abbr title="Test bit 2 of value pointed by HL">BIT 2,(HL)</abbr></td>
<td><abbr title="Test bit 2 of A">BIT 2,A</abbr></td>
<td><abbr title="Test bit 3 of B">BIT 3,B</abbr></td>
<td><abbr title="Test bit 3 of C">BIT 3,C</abbr></td>
<td><abbr title="Test bit 3 of D">BIT 3,D</abbr></td>
<td><abbr title="Test bit 3 of E">BIT 3,E</abbr></td>
<td><abbr title="Test bit 3 of H">BIT 3,H</abbr></td>
<td><abbr title="Test bit 3 of L">BIT 3,L</abbr></td>
<td><abbr title="Test bit 3 of value pointed by HL">BIT 3,(HL)</abbr></td>
<td><abbr title="Test bit 3 of A">BIT 3,A</abbr></td>
<td><abbr title="Test bit 4 of B">BIT 4,B</abbr></td>
<td><abbr title="Test bit 4 of C">BIT 4,C</abbr></td>
<td><abbr title="Test bit 4 of D">BIT 4,D</abbr></td>
<td><abbr title="Test bit 4 of E">BIT 4,E</abbr></td>
<td><abbr title="Test bit 4 of H">BIT 4,H</abbr></td>
<td><abbr title="Test bit 4 of L">BIT 4,L</abbr></td>
<td><abbr title="Test bit 4 of value pointed by HL">BIT 4,(HL)</abbr></td>
<td><abbr title="Test bit 4 of A">BIT 4,A</abbr></td>
<td><abbr title="Test bit 5 of B">BIT 5,B</abbr></td>
<td><abbr title="Test bit 5 of C">BIT 5,C</abbr></td>
<td><abbr title="Test bit 5 of D">BIT 5,D</abbr></td>
<td><abbr title="Test bit 5 of E">BIT 5,E</abbr></td>
<td><abbr title="Test bit 5 of H">BIT 5,H</abbr></td>
<td><abbr title="Test bit 5 of L">BIT 5,L</abbr></td>
<td><abbr title="Test bit 5 of value pointed by HL">BIT 5,(HL)</abbr></td>
<td><abbr title="Test bit 5 of A">BIT 5,A</abbr></td>
<td><abbr title="Test bit 6 of B">BIT 6,B</abbr></td>
<td><abbr title="Test bit 6 of C">BIT 6,C</abbr></td>
<td><abbr title="Test bit 6 of D">BIT 6,D</abbr></td>
<td><abbr title="Test bit 6 of E">BIT 6,E</abbr></td>
<td><abbr title="Test bit 6 of H">BIT 6,H</abbr></td>
<td><abbr title="Test bit 6 of L">BIT 6,L</abbr></td>
<td><abbr title="Test bit 6 of value pointed by HL">BIT 6,(HL)</abbr></td>
<td><abbr title="Test bit 6 of A">BIT 6,A</abbr></td>
<td><abbr title="Test bit 7 of B">BIT 7,B</abbr></td>
<td><abbr title="Test bit 7 of C">BIT 7,C</abbr></td>
<td><abbr title="Test bit 7 of D">BIT 7,D</abbr></td>
<td><abbr title="Test bit 7 of E">BIT 7,E</abbr></td>
<td><abbr title="Test bit 7 of H">BIT 7,H</abbr></td>
<td><abbr title="Test bit 7 of L">BIT 7,L</abbr></td>
<td><abbr title="Test bit 7 of value pointed by HL">BIT 7,(HL)</abbr></td>
<td><abbr title="Test bit 7 of A">BIT 7,A</abbr></td>
<td><abbr title="Clear (reset) bit 0 of B">RES 0,B</abbr></td>
<td><abbr title="Clear (reset) bit 0 of C">RES 0,C</abbr></td>
<td><abbr title="Clear (reset) bit 0 of D">RES 0,D</abbr></td>
<td><abbr title="Clear (reset) bit 0 of E">RES 0,E</abbr></td>
<td><abbr title="Clear (reset) bit 0 of H">RES 0,H</abbr></td>
<td><abbr title="Clear (reset) bit 0 of L">RES 0,L</abbr></td>
<td><abbr title="Clear (reset) bit 0 of value pointed by HL">RES 0,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 0 of A">RES 0,A</abbr></td>
<td><abbr title="Clear (reset) bit 1 of B">RES 1,B</abbr></td>
<td><abbr title="Clear (reset) bit 1 of C">RES 1,C</abbr></td>
<td><abbr title="Clear (reset) bit 1 of D">RES 1,D</abbr></td>
<td><abbr title="Clear (reset) bit 1 of E">RES 1,E</abbr></td>
<td><abbr title="Clear (reset) bit 1 of H">RES 1,H</abbr></td>
<td><abbr title="Clear (reset) bit 1 of L">RES 1,L</abbr></td>
<td><abbr title="Clear (reset) bit 1 of value pointed by HL">RES 1,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 1 of A">RES 1,A</abbr></td>
<td><abbr title="Clear (reset) bit 2 of B">RES 2,B</abbr></td>
<td><abbr title="Clear (reset) bit 2 of C">RES 2,C</abbr></td>
<td><abbr title="Clear (reset) bit 2 of D">RES 2,D</abbr></td>
<td><abbr title="Clear (reset) bit 2 of E">RES 2,E</abbr></td>
<td><abbr title="Clear (reset) bit 2 of H">RES 2,H</abbr></td>
<td><abbr title="Clear (reset) bit 2 of L">RES 2,L</abbr></td>
<td><abbr title="Clear (reset) bit 2 of value pointed by HL">RES 2,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 2 of A">RES 2,A</abbr></td>
<td><abbr title="Clear (reset) bit 3 of B">RES 3,B</abbr></td>
<td><abbr title="Clear (reset) bit 3 of C">RES 3,C</abbr></td>
<td><abbr title="Clear (reset) bit 3 of D">RES 3,D</abbr></td>
<td><abbr title="Clear (reset) bit 3 of E">RES 3,E</abbr></td>
<td><abbr title="Clear (reset) bit 3 of H">RES 3,H</abbr></td>
<td><abbr title="Clear (reset) bit 3 of L">RES 3,L</abbr></td>
<td><abbr title="Clear (reset) bit 3 of value pointed by HL">RES 3,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 3 of A">RES 3,A</abbr></td>
<td><abbr title="Clear (reset) bit 4 of B">RES 4,B</abbr></td>
<td><abbr title="Clear (reset) bit 4 of C">RES 4,C</abbr></td>
<td><abbr title="Clear (reset) bit 4 of D">RES 4,D</abbr></td>
<td><abbr title="Clear (reset) bit 4 of E">RES 4,E</abbr></td>
<td><abbr title="Clear (reset) bit 4 of H">RES 4,H</abbr></td>
<td><abbr title="Clear (reset) bit 4 of L">RES 4,L</abbr></td>
<td><abbr title="Clear (reset) bit 4 of value pointed by HL">RES 4,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 4 of A">RES 4,A</abbr></td>
<td><abbr title="Clear (reset) bit 5 of B">RES 5,B</abbr></td>
<td><abbr title="Clear (reset) bit 5 of C">RES 5,C</abbr></td>
<td><abbr title="Clear (reset) bit 5 of D">RES 5,D</abbr></td>
<td><abbr title="Clear (reset) bit 5 of E">RES 5,E</abbr></td>
<td><abbr title="Clear (reset) bit 5 of H">RES 5,H</abbr></td>
<td><abbr title="Clear (reset) bit 5 of L">RES 5,L</abbr></td>
<td><abbr title="Clear (reset) bit 5 of value pointed by HL">RES 5,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 5 of A">RES 5,A</abbr></td>
<td><abbr title="Clear (reset) bit 6 of B">RES 6,B</abbr></td>
<td><abbr title="Clear (reset) bit 6 of C">RES 6,C</abbr></td>
<td><abbr title="Clear (reset) bit 6 of D">RES 6,D</abbr></td>
<td><abbr title="Clear (reset) bit 6 of E">RES 6,E</abbr></td>
<td><abbr title="Clear (reset) bit 6 of H">RES 6,H</abbr></td>
<td><abbr title="Clear (reset) bit 6 of L">RES 6,L</abbr></td>
<td><abbr title="Clear (reset) bit 6 of value pointed by HL">RES 6,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 6 of A">RES 6,A</abbr></td>
<td><abbr title="Clear (reset) bit 7 of B">RES 7,B</abbr></td>
<td><abbr title="Clear (reset) bit 7 of C">RES 7,C</abbr></td>
<td><abbr title="Clear (reset) bit 7 of D">RES 7,D</abbr></td>
<td><abbr title="Clear (reset) bit 7 of E">RES 7,E</abbr></td>
<td><abbr title="Clear (reset) bit 7 of H">RES 7,H</abbr></td>
<td><abbr title="Clear (reset) bit 7 of L">RES 7,L</abbr></td>
<td><abbr title="Clear (reset) bit 7 of value pointed by HL">RES 7,(HL)</abbr></td>
<td><abbr title="Clear (reset) bit 7 of A">RES 7,A</abbr></td>
<td><abbr title="Set bit 0 of B">SET 0,B</abbr></td>
<td><abbr title="Set bit 0 of C">SET 0,C</abbr></td>
<td><abbr title="Set bit 0 of D">SET 0,D</abbr></td>
<td><abbr title="Set bit 0 of E">SET 0,E</abbr></td>
<td><abbr title="Set bit 0 of H">SET 0,H</abbr></td>
<td><abbr title="Set bit 0 of L">SET 0,L</abbr></td>
<td><abbr title="Set bit 0 of value pointed by HL">SET 0,(HL)</abbr></td>
<td><abbr title="Set bit 0 of A">SET 0,A</abbr></td>
<td><abbr title="Set bit 1 of B">SET 1,B</abbr></td>
<td><abbr title="Set bit 1 of C">SET 1,C</abbr></td>
<td><abbr title="Set bit 1 of D">SET 1,D</abbr></td>
<td><abbr title="Set bit 1 of E">SET 1,E</abbr></td>
<td><abbr title="Set bit 1 of H">SET 1,H</abbr></td>
<td><abbr title="Set bit 1 of L">SET 1,L</abbr></td>
<td><abbr title="Set bit 1 of value pointed by HL">SET 1,(HL)</abbr></td>
<td><abbr title="Set bit 1 of A">SET 1,A</abbr></td>
<td><abbr title="Set bit 2 of B">SET 2,B</abbr></td>
<td><abbr title="Set bit 2 of C">SET 2,C</abbr></td>
<td><abbr title="Set bit 2 of D">SET 2,D</abbr></td>
<td><abbr title="Set bit 2 of E">SET 2,E</abbr></td>
<td><abbr title="Set bit 2 of H">SET 2,H</abbr></td>
<td><abbr title="Set bit 2 of L">SET 2,L</abbr></td>
<td><abbr title="Set bit 2 of value pointed by HL">SET 2,(HL)</abbr></td>
<td><abbr title="Set bit 2 of A">SET 2,A</abbr></td>
<td><abbr title="Set bit 3 of B">SET 3,B</abbr></td>
<td><abbr title="Set bit 3 of C">SET 3,C</abbr></td>
<td><abbr title="Set bit 3 of D">SET 3,D</abbr></td>
<td><abbr title="Set bit 3 of E">SET 3,E</abbr></td>
<td><abbr title="Set bit 3 of H">SET 3,H</abbr></td>
<td><abbr title="Set bit 3 of L">SET 3,L</abbr></td>
<td><abbr title="Set bit 3 of value pointed by HL">SET 3,(HL)</abbr></td>
<td><abbr title="Set bit 3 of A">SET 3,A</abbr></td>
<td><abbr title="Set bit 4 of B">SET 4,B</abbr></td>
<td><abbr title="Set bit 4 of C">SET 4,C</abbr></td>
<td><abbr title="Set bit 4 of D">SET 4,D</abbr></td>
<td><abbr title="Set bit 4 of E">SET 4,E</abbr></td>
<td><abbr title="Set bit 4 of H">SET 4,H</abbr></td>
<td><abbr title="Set bit 4 of L">SET 4,L</abbr></td>
<td><abbr title="Set bit 4 of value pointed by HL">SET 4,(HL)</abbr></td>
<td><abbr title="Set bit 4 of A">SET 4,A</abbr></td>
<td><abbr title="Set bit 5 of B">SET 5,B</abbr></td>
<td><abbr title="Set bit 5 of C">SET 5,C</abbr></td>
<td><abbr title="Set bit 5 of D">SET 5,D</abbr></td>
<td><abbr title="Set bit 5 of E">SET 5,E</abbr></td>
<td><abbr title="Set bit 5 of H">SET 5,H</abbr></td>
<td><abbr title="Set bit 5 of L">SET 5,L</abbr></td>
<td><abbr title="Set bit 5 of value pointed by HL">SET 5,(HL)</abbr></td>
<td><abbr title="Set bit 5 of A">SET 5,A</abbr></td>
<td><abbr title="Set bit 6 of B">SET 6,B</abbr></td>
<td><abbr title="Set bit 6 of C">SET 6,C</abbr></td>
<td><abbr title="Set bit 6 of D">SET 6,D</abbr></td>
<td><abbr title="Set bit 6 of E">SET 6,E</abbr></td>
<td><abbr title="Set bit 6 of H">SET 6,H</abbr></td>
<td><abbr title="Set bit 6 of L">SET 6,L</abbr></td>
<td><abbr title="Set bit 6 of value pointed by HL">SET 6,(HL)</abbr></td>
<td><abbr title="Set bit 6 of A">SET 6,A</abbr></td>
<td><abbr title="Set bit 7 of B">SET 7,B</abbr></td>
<td><abbr title="Set bit 7 of C">SET 7,C</abbr></td>
<td><abbr title="Set bit 7 of D">SET 7,D</abbr></td>
<td><abbr title="Set bit 7 of E">SET 7,E</abbr></td>
<td><abbr title="Set bit 7 of H">SET 7,H</abbr></td>
<td><abbr title="Set bit 7 of L">SET 7,L</abbr></td>
<td><abbr title="Set bit 7 of value pointed by HL">SET 7,(HL)</abbr></td>
<td><abbr title="Set bit 7 of A">SET 7,A</abbr></td>"""

import re

for opcodeTable in [opcodeTable1,opcodeTable2]: 
	for prefix in ["i_","i2_"]:
		for num,line in enumerate(opcodeTable.split('\n')):
			comment = re.search('title="([^"]+)"',line).group(1)
			title = prefix+re.search(">([^<]+)</abbr",line).group(1).replace("(","_").replace(")","_").replace(" ","_").replace(",","_")
			print "0x%2X"%num,title,comment


