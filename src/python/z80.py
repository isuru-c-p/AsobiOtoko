# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_z80', [dirname(__file__)])
        except ImportError:
            import _z80
            return _z80
        if fp is not None:
            try:
                _mod = imp.load_module('_z80', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _z80 = swig_import_helper()
    del swig_import_helper
else:
    import _z80
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def getReg(*args):
  return _z80.getReg(*args)
getReg = _z80.getReg

def setReg(*args):
  return _z80.setReg(*args)
setReg = _z80.setReg

def getReg16(*args):
  return _z80.getReg16(*args)
getReg16 = _z80.getReg16

def setReg16(*args):
  return _z80.setReg16(*args)
setReg16 = _z80.setReg16
VRAM_SIZE = _z80.VRAM_SIZE
OAM_SIZE = _z80.OAM_SIZE
BGWON = _z80.BGWON
OBJON = _z80.OBJON
OBJSIZE = _z80.OBJSIZE
BGMAP = _z80.BGMAP
BGWDATASEL = _z80.BGWDATASEL
WDISP = _z80.WDISP
WMAP = _z80.WMAP
LCDON = _z80.LCDON
SCREEN_BUFF_SIZE = _z80.SCREEN_BUFF_SIZE
PRIORITY = _z80.PRIORITY
YFLIP = _z80.YFLIP
XFLIP = _z80.XFLIP
SPRITE_PALETTE = _z80.SPRITE_PALETTE
class GPU(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, GPU, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, GPU, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mode"] = _z80.GPU_mode_set
    __swig_getmethods__["mode"] = _z80.GPU_mode_get
    if _newclass:mode = _swig_property(_z80.GPU_mode_get, _z80.GPU_mode_set)
    __swig_setmethods__["vram"] = _z80.GPU_vram_set
    __swig_getmethods__["vram"] = _z80.GPU_vram_get
    if _newclass:vram = _swig_property(_z80.GPU_vram_get, _z80.GPU_vram_set)
    __swig_setmethods__["oam"] = _z80.GPU_oam_set
    __swig_getmethods__["oam"] = _z80.GPU_oam_get
    if _newclass:oam = _swig_property(_z80.GPU_oam_get, _z80.GPU_oam_set)
    __swig_setmethods__["SCX"] = _z80.GPU_SCX_set
    __swig_getmethods__["SCX"] = _z80.GPU_SCX_get
    if _newclass:SCX = _swig_property(_z80.GPU_SCX_get, _z80.GPU_SCX_set)
    __swig_setmethods__["SCY"] = _z80.GPU_SCY_set
    __swig_getmethods__["SCY"] = _z80.GPU_SCY_get
    if _newclass:SCY = _swig_property(_z80.GPU_SCY_get, _z80.GPU_SCY_set)
    __swig_setmethods__["LY"] = _z80.GPU_LY_set
    __swig_getmethods__["LY"] = _z80.GPU_LY_get
    if _newclass:LY = _swig_property(_z80.GPU_LY_get, _z80.GPU_LY_set)
    __swig_setmethods__["LYC"] = _z80.GPU_LYC_set
    __swig_getmethods__["LYC"] = _z80.GPU_LYC_get
    if _newclass:LYC = _swig_property(_z80.GPU_LYC_get, _z80.GPU_LYC_set)
    __swig_setmethods__["STAT"] = _z80.GPU_STAT_set
    __swig_getmethods__["STAT"] = _z80.GPU_STAT_get
    if _newclass:STAT = _swig_property(_z80.GPU_STAT_get, _z80.GPU_STAT_set)
    __swig_setmethods__["LCDC"] = _z80.GPU_LCDC_set
    __swig_getmethods__["LCDC"] = _z80.GPU_LCDC_get
    if _newclass:LCDC = _swig_property(_z80.GPU_LCDC_get, _z80.GPU_LCDC_set)
    __swig_setmethods__["BGP"] = _z80.GPU_BGP_set
    __swig_getmethods__["BGP"] = _z80.GPU_BGP_get
    if _newclass:BGP = _swig_property(_z80.GPU_BGP_get, _z80.GPU_BGP_set)
    __swig_setmethods__["OBP0"] = _z80.GPU_OBP0_set
    __swig_getmethods__["OBP0"] = _z80.GPU_OBP0_get
    if _newclass:OBP0 = _swig_property(_z80.GPU_OBP0_get, _z80.GPU_OBP0_set)
    __swig_setmethods__["OBP1"] = _z80.GPU_OBP1_set
    __swig_getmethods__["OBP1"] = _z80.GPU_OBP1_get
    if _newclass:OBP1 = _swig_property(_z80.GPU_OBP1_get, _z80.GPU_OBP1_set)
    __swig_setmethods__["WY"] = _z80.GPU_WY_set
    __swig_getmethods__["WY"] = _z80.GPU_WY_get
    if _newclass:WY = _swig_property(_z80.GPU_WY_get, _z80.GPU_WY_set)
    __swig_setmethods__["WX"] = _z80.GPU_WX_set
    __swig_getmethods__["WX"] = _z80.GPU_WX_get
    if _newclass:WX = _swig_property(_z80.GPU_WX_get, _z80.GPU_WX_set)
    __swig_setmethods__["buffer"] = _z80.GPU_buffer_set
    __swig_getmethods__["buffer"] = _z80.GPU_buffer_get
    if _newclass:buffer = _swig_property(_z80.GPU_buffer_get, _z80.GPU_buffer_set)
    __swig_setmethods__["sprite_line"] = _z80.GPU_sprite_line_set
    __swig_getmethods__["sprite_line"] = _z80.GPU_sprite_line_get
    if _newclass:sprite_line = _swig_property(_z80.GPU_sprite_line_get, _z80.GPU_sprite_line_set)
    __swig_setmethods__["clock"] = _z80.GPU_clock_set
    __swig_getmethods__["clock"] = _z80.GPU_clock_get
    if _newclass:clock = _swig_property(_z80.GPU_clock_get, _z80.GPU_clock_set)
    __swig_setmethods__["vblankPending"] = _z80.GPU_vblankPending_set
    __swig_getmethods__["vblankPending"] = _z80.GPU_vblankPending_get
    if _newclass:vblankPending = _swig_property(_z80.GPU_vblankPending_get, _z80.GPU_vblankPending_set)
    def __init__(self): 
        this = _z80.new_GPU()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _z80.delete_GPU
    __del__ = lambda self : None;
GPU_swigregister = _z80.GPU_swigregister
GPU_swigregister(GPU)


def gpu_rb(*args):
  return _z80.gpu_rb(*args)
gpu_rb = _z80.gpu_rb

def gpu_wb(*args):
  return _z80.gpu_wb(*args)
gpu_wb = _z80.gpu_wb

def getPixelColor(*args):
  return _z80.getPixelColor(*args)
getPixelColor = _z80.getPixelColor

def MapSpritePixel(*args):
  return _z80.MapSpritePixel(*args)
MapSpritePixel = _z80.MapSpritePixel

def initGPU(*args):
  return _z80.initGPU(*args)
initGPU = _z80.initGPU

def gpu_step(*args):
  return _z80.gpu_step(*args)
gpu_step = _z80.gpu_step

def writeScanline(*args):
  return _z80.writeScanline(*args)
writeScanline = _z80.writeScanline

def renderScreen(*args):
  return _z80.renderScreen(*args)
renderScreen = _z80.renderScreen

def readOAM(*args):
  return _z80.readOAM(*args)
readOAM = _z80.readOAM
MEMORYSIZE = _z80.MEMORYSIZE
EXT_RAM_SIZE = _z80.EXT_RAM_SIZE
WORKING_RAM_SIZE = _z80.WORKING_RAM_SIZE
ZERO_PAGE_RAM_SIZE = _z80.ZERO_PAGE_RAM_SIZE
BIOS_SIZE = _z80.BIOS_SIZE
CARTRIDGE_SIZE = _z80.CARTRIDGE_SIZE
class MMU(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MMU, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MMU, name)
    __repr__ = _swig_repr
    __swig_setmethods__["bios_enabled"] = _z80.MMU_bios_enabled_set
    __swig_getmethods__["bios_enabled"] = _z80.MMU_bios_enabled_get
    if _newclass:bios_enabled = _swig_property(_z80.MMU_bios_enabled_get, _z80.MMU_bios_enabled_set)
    __swig_setmethods__["memory"] = _z80.MMU_memory_set
    __swig_getmethods__["memory"] = _z80.MMU_memory_get
    if _newclass:memory = _swig_property(_z80.MMU_memory_get, _z80.MMU_memory_set)
    __swig_setmethods__["wram"] = _z80.MMU_wram_set
    __swig_getmethods__["wram"] = _z80.MMU_wram_get
    if _newclass:wram = _swig_property(_z80.MMU_wram_get, _z80.MMU_wram_set)
    __swig_setmethods__["zram"] = _z80.MMU_zram_set
    __swig_getmethods__["zram"] = _z80.MMU_zram_get
    if _newclass:zram = _swig_property(_z80.MMU_zram_get, _z80.MMU_zram_set)
    __swig_setmethods__["eram"] = _z80.MMU_eram_set
    __swig_getmethods__["eram"] = _z80.MMU_eram_get
    if _newclass:eram = _swig_property(_z80.MMU_eram_get, _z80.MMU_eram_set)
    __swig_setmethods__["oam"] = _z80.MMU_oam_set
    __swig_getmethods__["oam"] = _z80.MMU_oam_get
    if _newclass:oam = _swig_property(_z80.MMU_oam_get, _z80.MMU_oam_set)
    __swig_setmethods__["bios"] = _z80.MMU_bios_set
    __swig_getmethods__["bios"] = _z80.MMU_bios_get
    if _newclass:bios = _swig_property(_z80.MMU_bios_get, _z80.MMU_bios_set)
    __swig_setmethods__["cartridge"] = _z80.MMU_cartridge_set
    __swig_getmethods__["cartridge"] = _z80.MMU_cartridge_get
    if _newclass:cartridge = _swig_property(_z80.MMU_cartridge_get, _z80.MMU_cartridge_set)
    __swig_setmethods__["gpu"] = _z80.MMU_gpu_set
    __swig_getmethods__["gpu"] = _z80.MMU_gpu_get
    if _newclass:gpu = _swig_property(_z80.MMU_gpu_get, _z80.MMU_gpu_set)
    __swig_setmethods__["addressLUT"] = _z80.MMU_addressLUT_set
    __swig_getmethods__["addressLUT"] = _z80.MMU_addressLUT_get
    if _newclass:addressLUT = _swig_property(_z80.MMU_addressLUT_get, _z80.MMU_addressLUT_set)
    def __init__(self): 
        this = _z80.new_MMU()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _z80.delete_MMU
    __del__ = lambda self : None;
MMU_swigregister = _z80.MMU_swigregister
MMU_swigregister(MMU)


def disableBios(*args):
  return _z80.disableBios(*args)
disableBios = _z80.disableBios

def initMMU(*args):
  return _z80.initMMU(*args)
initMMU = _z80.initMMU

def rb(*args):
  return _z80.rb(*args)
rb = _z80.rb

def rw(*args):
  return _z80.rw(*args)
rw = _z80.rw

def wb(*args):
  return _z80.wb(*args)
wb = _z80.wb

def ww(*args):
  return _z80.ww(*args)
ww = _z80.ww
CARRY = _z80.CARRY
HALFCARRY = _z80.HALFCARRY
SUB = _z80.SUB
ZERO = _z80.ZERO
REGA = _z80.REGA
REGB = _z80.REGB
REGC = _z80.REGC
REGD = _z80.REGD
REGE = _z80.REGE
REGF = _z80.REGF
REGH = _z80.REGH
REGL = _z80.REGL
REGMEM = _z80.REGMEM
PC = _z80.PC
SP = _z80.SP
P0_P13_INT = _z80.P0_P13_INT
SERIALINT = _z80.SERIALINT
TOVF = _z80.TOVF
LCDCINT = _z80.LCDCINT
VBLANKINT = _z80.VBLANKINT
class z80(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, z80, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, z80, name)
    __repr__ = _swig_repr
    __swig_setmethods__["registers"] = _z80.z80_registers_set
    __swig_getmethods__["registers"] = _z80.z80_registers_get
    if _newclass:registers = _swig_property(_z80.z80_registers_get, _z80.z80_registers_set)
    __swig_setmethods__["registers16"] = _z80.z80_registers16_set
    __swig_getmethods__["registers16"] = _z80.z80_registers16_get
    if _newclass:registers16 = _swig_property(_z80.z80_registers16_get, _z80.z80_registers16_set)
    __swig_setmethods__["mmu"] = _z80.z80_mmu_set
    __swig_getmethods__["mmu"] = _z80.z80_mmu_get
    if _newclass:mmu = _swig_property(_z80.z80_mmu_get, _z80.z80_mmu_set)
    __swig_setmethods__["ime"] = _z80.z80_ime_set
    __swig_getmethods__["ime"] = _z80.z80_ime_get
    if _newclass:ime = _swig_property(_z80.z80_ime_get, _z80.z80_ime_set)
    __swig_setmethods__["tcycles"] = _z80.z80_tcycles_set
    __swig_getmethods__["tcycles"] = _z80.z80_tcycles_get
    if _newclass:tcycles = _swig_property(_z80.z80_tcycles_get, _z80.z80_tcycles_set)
    def __init__(self): 
        this = _z80.new_z80()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _z80.delete_z80
    __del__ = lambda self : None;
z80_swigregister = _z80.z80_swigregister
z80_swigregister(z80)


def buildStatusFlag(*args):
  return _z80.buildStatusFlag(*args)
buildStatusFlag = _z80.buildStatusFlag

def loadRegMemFromHL(*args):
  return _z80.loadRegMemFromHL(*args)
loadRegMemFromHL = _z80.loadRegMemFromHL

def saveRegMemToHL(*args):
  return _z80.saveRegMemToHL(*args)
saveRegMemToHL = _z80.saveRegMemToHL

def push(*args):
  return _z80.push(*args)
push = _z80.push

def triggerInterrupt(*args):
  return _z80.triggerInterrupt(*args)
triggerInterrupt = _z80.triggerInterrupt

def executeNextInstruction(*args):
  return _z80.executeNextInstruction(*args)
executeNextInstruction = _z80.executeNextInstruction

def checkAndTriggerInterrupts(*args):
  return _z80.checkAndTriggerInterrupts(*args)
checkAndTriggerInterrupts = _z80.checkAndTriggerInterrupts

def dispatchInstruction(*args):
  return _z80.dispatchInstruction(*args)
dispatchInstruction = _z80.dispatchInstruction

def initZ80(*args):
  return _z80.initZ80(*args)
initZ80 = _z80.initZ80

def i_NOP(*args):
  return _z80.i_NOP(*args)
i_NOP = _z80.i_NOP

def i_LD_BC_nn(*args):
  return _z80.i_LD_BC_nn(*args)
i_LD_BC_nn = _z80.i_LD_BC_nn

def i_LD__BC__A(*args):
  return _z80.i_LD__BC__A(*args)
i_LD__BC__A = _z80.i_LD__BC__A

def i_INC_BC(*args):
  return _z80.i_INC_BC(*args)
i_INC_BC = _z80.i_INC_BC

def i_INC_B(*args):
  return _z80.i_INC_B(*args)
i_INC_B = _z80.i_INC_B

def i_DEC_B(*args):
  return _z80.i_DEC_B(*args)
i_DEC_B = _z80.i_DEC_B

def i_LD_B_n(*args):
  return _z80.i_LD_B_n(*args)
i_LD_B_n = _z80.i_LD_B_n

def i_RLC_A(*args):
  return _z80.i_RLC_A(*args)
i_RLC_A = _z80.i_RLC_A

def i_LD__nn__SP(*args):
  return _z80.i_LD__nn__SP(*args)
i_LD__nn__SP = _z80.i_LD__nn__SP

def i_ADD_HL_BC(*args):
  return _z80.i_ADD_HL_BC(*args)
i_ADD_HL_BC = _z80.i_ADD_HL_BC

def i_LD_A__BC_(*args):
  return _z80.i_LD_A__BC_(*args)
i_LD_A__BC_ = _z80.i_LD_A__BC_

def i_DEC_BC(*args):
  return _z80.i_DEC_BC(*args)
i_DEC_BC = _z80.i_DEC_BC

def i_INC_C(*args):
  return _z80.i_INC_C(*args)
i_INC_C = _z80.i_INC_C

def i_DEC_C(*args):
  return _z80.i_DEC_C(*args)
i_DEC_C = _z80.i_DEC_C

def i_LD_C_n(*args):
  return _z80.i_LD_C_n(*args)
i_LD_C_n = _z80.i_LD_C_n

def i_RRC_A(*args):
  return _z80.i_RRC_A(*args)
i_RRC_A = _z80.i_RRC_A

def i_STOP(*args):
  return _z80.i_STOP(*args)
i_STOP = _z80.i_STOP

def i_LD_DE_nn(*args):
  return _z80.i_LD_DE_nn(*args)
i_LD_DE_nn = _z80.i_LD_DE_nn

def i_LD__DE__A(*args):
  return _z80.i_LD__DE__A(*args)
i_LD__DE__A = _z80.i_LD__DE__A

def i_INC_DE(*args):
  return _z80.i_INC_DE(*args)
i_INC_DE = _z80.i_INC_DE

def i_INC_D(*args):
  return _z80.i_INC_D(*args)
i_INC_D = _z80.i_INC_D

def i_DEC_D(*args):
  return _z80.i_DEC_D(*args)
i_DEC_D = _z80.i_DEC_D

def i_LD_D_n(*args):
  return _z80.i_LD_D_n(*args)
i_LD_D_n = _z80.i_LD_D_n

def i_RL_A(*args):
  return _z80.i_RL_A(*args)
i_RL_A = _z80.i_RL_A

def i_JR_n(*args):
  return _z80.i_JR_n(*args)
i_JR_n = _z80.i_JR_n

def i_ADD_HL_DE(*args):
  return _z80.i_ADD_HL_DE(*args)
i_ADD_HL_DE = _z80.i_ADD_HL_DE

def i_LD_A__DE_(*args):
  return _z80.i_LD_A__DE_(*args)
i_LD_A__DE_ = _z80.i_LD_A__DE_

def i_DEC_DE(*args):
  return _z80.i_DEC_DE(*args)
i_DEC_DE = _z80.i_DEC_DE

def i_INC_E(*args):
  return _z80.i_INC_E(*args)
i_INC_E = _z80.i_INC_E

def i_DEC_E(*args):
  return _z80.i_DEC_E(*args)
i_DEC_E = _z80.i_DEC_E

def i_LD_E_n(*args):
  return _z80.i_LD_E_n(*args)
i_LD_E_n = _z80.i_LD_E_n

def i_RR_A(*args):
  return _z80.i_RR_A(*args)
i_RR_A = _z80.i_RR_A

def i_JR_NZ_n(*args):
  return _z80.i_JR_NZ_n(*args)
i_JR_NZ_n = _z80.i_JR_NZ_n

def i_LD_HL_nn(*args):
  return _z80.i_LD_HL_nn(*args)
i_LD_HL_nn = _z80.i_LD_HL_nn

def i_LDI__HL__A(*args):
  return _z80.i_LDI__HL__A(*args)
i_LDI__HL__A = _z80.i_LDI__HL__A

def i_INC_HL(*args):
  return _z80.i_INC_HL(*args)
i_INC_HL = _z80.i_INC_HL

def i_INC_H(*args):
  return _z80.i_INC_H(*args)
i_INC_H = _z80.i_INC_H

def i_DEC_H(*args):
  return _z80.i_DEC_H(*args)
i_DEC_H = _z80.i_DEC_H

def i_LD_H_n(*args):
  return _z80.i_LD_H_n(*args)
i_LD_H_n = _z80.i_LD_H_n

def i_DAA(*args):
  return _z80.i_DAA(*args)
i_DAA = _z80.i_DAA

def i_JR_Z_n(*args):
  return _z80.i_JR_Z_n(*args)
i_JR_Z_n = _z80.i_JR_Z_n

def i_ADD_HL_HL(*args):
  return _z80.i_ADD_HL_HL(*args)
i_ADD_HL_HL = _z80.i_ADD_HL_HL

def i_LDI_A__HL_(*args):
  return _z80.i_LDI_A__HL_(*args)
i_LDI_A__HL_ = _z80.i_LDI_A__HL_

def i_DEC_HL(*args):
  return _z80.i_DEC_HL(*args)
i_DEC_HL = _z80.i_DEC_HL

def i_INC_L(*args):
  return _z80.i_INC_L(*args)
i_INC_L = _z80.i_INC_L

def i_DEC_L(*args):
  return _z80.i_DEC_L(*args)
i_DEC_L = _z80.i_DEC_L

def i_LD_L_n(*args):
  return _z80.i_LD_L_n(*args)
i_LD_L_n = _z80.i_LD_L_n

def i_CPL(*args):
  return _z80.i_CPL(*args)
i_CPL = _z80.i_CPL

def i_JR_NC_n(*args):
  return _z80.i_JR_NC_n(*args)
i_JR_NC_n = _z80.i_JR_NC_n

def i_LD_SP_nn(*args):
  return _z80.i_LD_SP_nn(*args)
i_LD_SP_nn = _z80.i_LD_SP_nn

def i_LDD__HL__A(*args):
  return _z80.i_LDD__HL__A(*args)
i_LDD__HL__A = _z80.i_LDD__HL__A

def i_INC_SP(*args):
  return _z80.i_INC_SP(*args)
i_INC_SP = _z80.i_INC_SP

def i_INC__HL_(*args):
  return _z80.i_INC__HL_(*args)
i_INC__HL_ = _z80.i_INC__HL_

def i_DEC__HL_(*args):
  return _z80.i_DEC__HL_(*args)
i_DEC__HL_ = _z80.i_DEC__HL_

def i_LD__HL__n(*args):
  return _z80.i_LD__HL__n(*args)
i_LD__HL__n = _z80.i_LD__HL__n

def i_SCF(*args):
  return _z80.i_SCF(*args)
i_SCF = _z80.i_SCF

def i_JR_C_n(*args):
  return _z80.i_JR_C_n(*args)
i_JR_C_n = _z80.i_JR_C_n

def i_ADD_HL_SP(*args):
  return _z80.i_ADD_HL_SP(*args)
i_ADD_HL_SP = _z80.i_ADD_HL_SP

def i_LDD_A__HL_(*args):
  return _z80.i_LDD_A__HL_(*args)
i_LDD_A__HL_ = _z80.i_LDD_A__HL_

def i_DEC_SP(*args):
  return _z80.i_DEC_SP(*args)
i_DEC_SP = _z80.i_DEC_SP

def i_INC_A(*args):
  return _z80.i_INC_A(*args)
i_INC_A = _z80.i_INC_A

def i_DEC_A(*args):
  return _z80.i_DEC_A(*args)
i_DEC_A = _z80.i_DEC_A

def i_LD_A_n(*args):
  return _z80.i_LD_A_n(*args)
i_LD_A_n = _z80.i_LD_A_n

def i_CCF(*args):
  return _z80.i_CCF(*args)
i_CCF = _z80.i_CCF

def i_LD_B_B(*args):
  return _z80.i_LD_B_B(*args)
i_LD_B_B = _z80.i_LD_B_B

def i_LD_B_C(*args):
  return _z80.i_LD_B_C(*args)
i_LD_B_C = _z80.i_LD_B_C

def i_LD_B_D(*args):
  return _z80.i_LD_B_D(*args)
i_LD_B_D = _z80.i_LD_B_D

def i_LD_B_E(*args):
  return _z80.i_LD_B_E(*args)
i_LD_B_E = _z80.i_LD_B_E

def i_LD_B_H(*args):
  return _z80.i_LD_B_H(*args)
i_LD_B_H = _z80.i_LD_B_H

def i_LD_B_L(*args):
  return _z80.i_LD_B_L(*args)
i_LD_B_L = _z80.i_LD_B_L

def i_LD_B__HL_(*args):
  return _z80.i_LD_B__HL_(*args)
i_LD_B__HL_ = _z80.i_LD_B__HL_

def i_LD_B_A(*args):
  return _z80.i_LD_B_A(*args)
i_LD_B_A = _z80.i_LD_B_A

def i_LD_C_B(*args):
  return _z80.i_LD_C_B(*args)
i_LD_C_B = _z80.i_LD_C_B

def i_LD_C_C(*args):
  return _z80.i_LD_C_C(*args)
i_LD_C_C = _z80.i_LD_C_C

def i_LD_C_D(*args):
  return _z80.i_LD_C_D(*args)
i_LD_C_D = _z80.i_LD_C_D

def i_LD_C_E(*args):
  return _z80.i_LD_C_E(*args)
i_LD_C_E = _z80.i_LD_C_E

def i_LD_C_H(*args):
  return _z80.i_LD_C_H(*args)
i_LD_C_H = _z80.i_LD_C_H

def i_LD_C_L(*args):
  return _z80.i_LD_C_L(*args)
i_LD_C_L = _z80.i_LD_C_L

def i_LD_C__HL_(*args):
  return _z80.i_LD_C__HL_(*args)
i_LD_C__HL_ = _z80.i_LD_C__HL_

def i_LD_C_A(*args):
  return _z80.i_LD_C_A(*args)
i_LD_C_A = _z80.i_LD_C_A

def i_LD_D_B(*args):
  return _z80.i_LD_D_B(*args)
i_LD_D_B = _z80.i_LD_D_B

def i_LD_D_C(*args):
  return _z80.i_LD_D_C(*args)
i_LD_D_C = _z80.i_LD_D_C

def i_LD_D_D(*args):
  return _z80.i_LD_D_D(*args)
i_LD_D_D = _z80.i_LD_D_D

def i_LD_D_E(*args):
  return _z80.i_LD_D_E(*args)
i_LD_D_E = _z80.i_LD_D_E

def i_LD_D_H(*args):
  return _z80.i_LD_D_H(*args)
i_LD_D_H = _z80.i_LD_D_H

def i_LD_D_L(*args):
  return _z80.i_LD_D_L(*args)
i_LD_D_L = _z80.i_LD_D_L

def i_LD_D__HL_(*args):
  return _z80.i_LD_D__HL_(*args)
i_LD_D__HL_ = _z80.i_LD_D__HL_

def i_LD_D_A(*args):
  return _z80.i_LD_D_A(*args)
i_LD_D_A = _z80.i_LD_D_A

def i_LD_E_B(*args):
  return _z80.i_LD_E_B(*args)
i_LD_E_B = _z80.i_LD_E_B

def i_LD_E_C(*args):
  return _z80.i_LD_E_C(*args)
i_LD_E_C = _z80.i_LD_E_C

def i_LD_E_D(*args):
  return _z80.i_LD_E_D(*args)
i_LD_E_D = _z80.i_LD_E_D

def i_LD_E_E(*args):
  return _z80.i_LD_E_E(*args)
i_LD_E_E = _z80.i_LD_E_E

def i_LD_E_H(*args):
  return _z80.i_LD_E_H(*args)
i_LD_E_H = _z80.i_LD_E_H

def i_LD_E_L(*args):
  return _z80.i_LD_E_L(*args)
i_LD_E_L = _z80.i_LD_E_L

def i_LD_E__HL_(*args):
  return _z80.i_LD_E__HL_(*args)
i_LD_E__HL_ = _z80.i_LD_E__HL_

def i_LD_E_A(*args):
  return _z80.i_LD_E_A(*args)
i_LD_E_A = _z80.i_LD_E_A

def i_LD_H_B(*args):
  return _z80.i_LD_H_B(*args)
i_LD_H_B = _z80.i_LD_H_B

def i_LD_H_C(*args):
  return _z80.i_LD_H_C(*args)
i_LD_H_C = _z80.i_LD_H_C

def i_LD_H_D(*args):
  return _z80.i_LD_H_D(*args)
i_LD_H_D = _z80.i_LD_H_D

def i_LD_H_E(*args):
  return _z80.i_LD_H_E(*args)
i_LD_H_E = _z80.i_LD_H_E

def i_LD_H_H(*args):
  return _z80.i_LD_H_H(*args)
i_LD_H_H = _z80.i_LD_H_H

def i_LD_H_L(*args):
  return _z80.i_LD_H_L(*args)
i_LD_H_L = _z80.i_LD_H_L

def i_LD_H__HL_(*args):
  return _z80.i_LD_H__HL_(*args)
i_LD_H__HL_ = _z80.i_LD_H__HL_

def i_LD_H_A(*args):
  return _z80.i_LD_H_A(*args)
i_LD_H_A = _z80.i_LD_H_A

def i_LD_L_B(*args):
  return _z80.i_LD_L_B(*args)
i_LD_L_B = _z80.i_LD_L_B

def i_LD_L_C(*args):
  return _z80.i_LD_L_C(*args)
i_LD_L_C = _z80.i_LD_L_C

def i_LD_L_D(*args):
  return _z80.i_LD_L_D(*args)
i_LD_L_D = _z80.i_LD_L_D

def i_LD_L_E(*args):
  return _z80.i_LD_L_E(*args)
i_LD_L_E = _z80.i_LD_L_E

def i_LD_L_H(*args):
  return _z80.i_LD_L_H(*args)
i_LD_L_H = _z80.i_LD_L_H

def i_LD_L_L(*args):
  return _z80.i_LD_L_L(*args)
i_LD_L_L = _z80.i_LD_L_L

def i_LD_L__HL_(*args):
  return _z80.i_LD_L__HL_(*args)
i_LD_L__HL_ = _z80.i_LD_L__HL_

def i_LD_L_A(*args):
  return _z80.i_LD_L_A(*args)
i_LD_L_A = _z80.i_LD_L_A

def i_LD__HL__B(*args):
  return _z80.i_LD__HL__B(*args)
i_LD__HL__B = _z80.i_LD__HL__B

def i_LD__HL__C(*args):
  return _z80.i_LD__HL__C(*args)
i_LD__HL__C = _z80.i_LD__HL__C

def i_LD__HL__D(*args):
  return _z80.i_LD__HL__D(*args)
i_LD__HL__D = _z80.i_LD__HL__D

def i_LD__HL__E(*args):
  return _z80.i_LD__HL__E(*args)
i_LD__HL__E = _z80.i_LD__HL__E

def i_LD__HL__H(*args):
  return _z80.i_LD__HL__H(*args)
i_LD__HL__H = _z80.i_LD__HL__H

def i_LD__HL__L(*args):
  return _z80.i_LD__HL__L(*args)
i_LD__HL__L = _z80.i_LD__HL__L

def i_HALT(*args):
  return _z80.i_HALT(*args)
i_HALT = _z80.i_HALT

def i_LD__HL__A(*args):
  return _z80.i_LD__HL__A(*args)
i_LD__HL__A = _z80.i_LD__HL__A

def i_LD_A_B(*args):
  return _z80.i_LD_A_B(*args)
i_LD_A_B = _z80.i_LD_A_B

def i_LD_A_C(*args):
  return _z80.i_LD_A_C(*args)
i_LD_A_C = _z80.i_LD_A_C

def i_LD_A_D(*args):
  return _z80.i_LD_A_D(*args)
i_LD_A_D = _z80.i_LD_A_D

def i_LD_A_E(*args):
  return _z80.i_LD_A_E(*args)
i_LD_A_E = _z80.i_LD_A_E

def i_LD_A_H(*args):
  return _z80.i_LD_A_H(*args)
i_LD_A_H = _z80.i_LD_A_H

def i_LD_A_L(*args):
  return _z80.i_LD_A_L(*args)
i_LD_A_L = _z80.i_LD_A_L

def i_LD_A__HL_(*args):
  return _z80.i_LD_A__HL_(*args)
i_LD_A__HL_ = _z80.i_LD_A__HL_

def i_LD_A_A(*args):
  return _z80.i_LD_A_A(*args)
i_LD_A_A = _z80.i_LD_A_A

def i_ADD_A_B(*args):
  return _z80.i_ADD_A_B(*args)
i_ADD_A_B = _z80.i_ADD_A_B

def i_ADD_A_C(*args):
  return _z80.i_ADD_A_C(*args)
i_ADD_A_C = _z80.i_ADD_A_C

def i_ADD_A_D(*args):
  return _z80.i_ADD_A_D(*args)
i_ADD_A_D = _z80.i_ADD_A_D

def i_ADD_A_E(*args):
  return _z80.i_ADD_A_E(*args)
i_ADD_A_E = _z80.i_ADD_A_E

def i_ADD_A_H(*args):
  return _z80.i_ADD_A_H(*args)
i_ADD_A_H = _z80.i_ADD_A_H

def i_ADD_A_L(*args):
  return _z80.i_ADD_A_L(*args)
i_ADD_A_L = _z80.i_ADD_A_L

def i_ADD_A__HL_(*args):
  return _z80.i_ADD_A__HL_(*args)
i_ADD_A__HL_ = _z80.i_ADD_A__HL_

def i_ADD_A_A(*args):
  return _z80.i_ADD_A_A(*args)
i_ADD_A_A = _z80.i_ADD_A_A

def i_ADC_A_B(*args):
  return _z80.i_ADC_A_B(*args)
i_ADC_A_B = _z80.i_ADC_A_B

def i_ADC_A_C(*args):
  return _z80.i_ADC_A_C(*args)
i_ADC_A_C = _z80.i_ADC_A_C

def i_ADC_A_D(*args):
  return _z80.i_ADC_A_D(*args)
i_ADC_A_D = _z80.i_ADC_A_D

def i_ADC_A_E(*args):
  return _z80.i_ADC_A_E(*args)
i_ADC_A_E = _z80.i_ADC_A_E

def i_ADC_A_H(*args):
  return _z80.i_ADC_A_H(*args)
i_ADC_A_H = _z80.i_ADC_A_H

def i_ADC_A_L(*args):
  return _z80.i_ADC_A_L(*args)
i_ADC_A_L = _z80.i_ADC_A_L

def i_ADC_A__HL_(*args):
  return _z80.i_ADC_A__HL_(*args)
i_ADC_A__HL_ = _z80.i_ADC_A__HL_

def i_ADC_A_A(*args):
  return _z80.i_ADC_A_A(*args)
i_ADC_A_A = _z80.i_ADC_A_A

def i_SUB_A_B(*args):
  return _z80.i_SUB_A_B(*args)
i_SUB_A_B = _z80.i_SUB_A_B

def i_SUB_A_C(*args):
  return _z80.i_SUB_A_C(*args)
i_SUB_A_C = _z80.i_SUB_A_C

def i_SUB_A_D(*args):
  return _z80.i_SUB_A_D(*args)
i_SUB_A_D = _z80.i_SUB_A_D

def i_SUB_A_E(*args):
  return _z80.i_SUB_A_E(*args)
i_SUB_A_E = _z80.i_SUB_A_E

def i_SUB_A_H(*args):
  return _z80.i_SUB_A_H(*args)
i_SUB_A_H = _z80.i_SUB_A_H

def i_SUB_A_L(*args):
  return _z80.i_SUB_A_L(*args)
i_SUB_A_L = _z80.i_SUB_A_L

def i_SUB_A__HL_(*args):
  return _z80.i_SUB_A__HL_(*args)
i_SUB_A__HL_ = _z80.i_SUB_A__HL_

def i_SUB_A_A(*args):
  return _z80.i_SUB_A_A(*args)
i_SUB_A_A = _z80.i_SUB_A_A

def i_SBC_A_B(*args):
  return _z80.i_SBC_A_B(*args)
i_SBC_A_B = _z80.i_SBC_A_B

def i_SBC_A_C(*args):
  return _z80.i_SBC_A_C(*args)
i_SBC_A_C = _z80.i_SBC_A_C

def i_SBC_A_D(*args):
  return _z80.i_SBC_A_D(*args)
i_SBC_A_D = _z80.i_SBC_A_D

def i_SBC_A_E(*args):
  return _z80.i_SBC_A_E(*args)
i_SBC_A_E = _z80.i_SBC_A_E

def i_SBC_A_H(*args):
  return _z80.i_SBC_A_H(*args)
i_SBC_A_H = _z80.i_SBC_A_H

def i_SBC_A_L(*args):
  return _z80.i_SBC_A_L(*args)
i_SBC_A_L = _z80.i_SBC_A_L

def i_SBC_A__HL_(*args):
  return _z80.i_SBC_A__HL_(*args)
i_SBC_A__HL_ = _z80.i_SBC_A__HL_

def i_SBC_A_A(*args):
  return _z80.i_SBC_A_A(*args)
i_SBC_A_A = _z80.i_SBC_A_A

def i_AND_B(*args):
  return _z80.i_AND_B(*args)
i_AND_B = _z80.i_AND_B

def i_AND_C(*args):
  return _z80.i_AND_C(*args)
i_AND_C = _z80.i_AND_C

def i_AND_D(*args):
  return _z80.i_AND_D(*args)
i_AND_D = _z80.i_AND_D

def i_AND_E(*args):
  return _z80.i_AND_E(*args)
i_AND_E = _z80.i_AND_E

def i_AND_H(*args):
  return _z80.i_AND_H(*args)
i_AND_H = _z80.i_AND_H

def i_AND_L(*args):
  return _z80.i_AND_L(*args)
i_AND_L = _z80.i_AND_L

def i_AND__HL_(*args):
  return _z80.i_AND__HL_(*args)
i_AND__HL_ = _z80.i_AND__HL_

def i_AND_A(*args):
  return _z80.i_AND_A(*args)
i_AND_A = _z80.i_AND_A

def i_XOR_B(*args):
  return _z80.i_XOR_B(*args)
i_XOR_B = _z80.i_XOR_B

def i_XOR_C(*args):
  return _z80.i_XOR_C(*args)
i_XOR_C = _z80.i_XOR_C

def i_XOR_D(*args):
  return _z80.i_XOR_D(*args)
i_XOR_D = _z80.i_XOR_D

def i_XOR_E(*args):
  return _z80.i_XOR_E(*args)
i_XOR_E = _z80.i_XOR_E

def i_XOR_H(*args):
  return _z80.i_XOR_H(*args)
i_XOR_H = _z80.i_XOR_H

def i_XOR_L(*args):
  return _z80.i_XOR_L(*args)
i_XOR_L = _z80.i_XOR_L

def i_XOR__HL_(*args):
  return _z80.i_XOR__HL_(*args)
i_XOR__HL_ = _z80.i_XOR__HL_

def i_XOR_A(*args):
  return _z80.i_XOR_A(*args)
i_XOR_A = _z80.i_XOR_A

def i_OR_B(*args):
  return _z80.i_OR_B(*args)
i_OR_B = _z80.i_OR_B

def i_OR_C(*args):
  return _z80.i_OR_C(*args)
i_OR_C = _z80.i_OR_C

def i_OR_D(*args):
  return _z80.i_OR_D(*args)
i_OR_D = _z80.i_OR_D

def i_OR_E(*args):
  return _z80.i_OR_E(*args)
i_OR_E = _z80.i_OR_E

def i_OR_H(*args):
  return _z80.i_OR_H(*args)
i_OR_H = _z80.i_OR_H

def i_OR_L(*args):
  return _z80.i_OR_L(*args)
i_OR_L = _z80.i_OR_L

def i_OR__HL_(*args):
  return _z80.i_OR__HL_(*args)
i_OR__HL_ = _z80.i_OR__HL_

def i_OR_A(*args):
  return _z80.i_OR_A(*args)
i_OR_A = _z80.i_OR_A

def i_CP_B(*args):
  return _z80.i_CP_B(*args)
i_CP_B = _z80.i_CP_B

def i_CP_C(*args):
  return _z80.i_CP_C(*args)
i_CP_C = _z80.i_CP_C

def i_CP_D(*args):
  return _z80.i_CP_D(*args)
i_CP_D = _z80.i_CP_D

def i_CP_E(*args):
  return _z80.i_CP_E(*args)
i_CP_E = _z80.i_CP_E

def i_CP_H(*args):
  return _z80.i_CP_H(*args)
i_CP_H = _z80.i_CP_H

def i_CP_L(*args):
  return _z80.i_CP_L(*args)
i_CP_L = _z80.i_CP_L

def i_CP__HL_(*args):
  return _z80.i_CP__HL_(*args)
i_CP__HL_ = _z80.i_CP__HL_

def i_CP_A(*args):
  return _z80.i_CP_A(*args)
i_CP_A = _z80.i_CP_A

def i_RET_NZ(*args):
  return _z80.i_RET_NZ(*args)
i_RET_NZ = _z80.i_RET_NZ

def i_POP_BC(*args):
  return _z80.i_POP_BC(*args)
i_POP_BC = _z80.i_POP_BC

def i_JP_NZ_nn(*args):
  return _z80.i_JP_NZ_nn(*args)
i_JP_NZ_nn = _z80.i_JP_NZ_nn

def i_JP_nn(*args):
  return _z80.i_JP_nn(*args)
i_JP_nn = _z80.i_JP_nn

def i_CALL_NZ_nn(*args):
  return _z80.i_CALL_NZ_nn(*args)
i_CALL_NZ_nn = _z80.i_CALL_NZ_nn

def i_PUSH_BC(*args):
  return _z80.i_PUSH_BC(*args)
i_PUSH_BC = _z80.i_PUSH_BC

def i_ADD_A_n(*args):
  return _z80.i_ADD_A_n(*args)
i_ADD_A_n = _z80.i_ADD_A_n

def i_RST_0(*args):
  return _z80.i_RST_0(*args)
i_RST_0 = _z80.i_RST_0

def i_RET_Z(*args):
  return _z80.i_RET_Z(*args)
i_RET_Z = _z80.i_RET_Z

def i_RET(*args):
  return _z80.i_RET(*args)
i_RET = _z80.i_RET

def i_JP_Z_nn(*args):
  return _z80.i_JP_Z_nn(*args)
i_JP_Z_nn = _z80.i_JP_Z_nn

def i_Ext_ops(*args):
  return _z80.i_Ext_ops(*args)
i_Ext_ops = _z80.i_Ext_ops

def i_CALL_Z_nn(*args):
  return _z80.i_CALL_Z_nn(*args)
i_CALL_Z_nn = _z80.i_CALL_Z_nn

def i_CALL_nn(*args):
  return _z80.i_CALL_nn(*args)
i_CALL_nn = _z80.i_CALL_nn

def i_ADC_A_n(*args):
  return _z80.i_ADC_A_n(*args)
i_ADC_A_n = _z80.i_ADC_A_n

def i_RST_8(*args):
  return _z80.i_RST_8(*args)
i_RST_8 = _z80.i_RST_8

def i_RET_NC(*args):
  return _z80.i_RET_NC(*args)
i_RET_NC = _z80.i_RET_NC

def i_POP_DE(*args):
  return _z80.i_POP_DE(*args)
i_POP_DE = _z80.i_POP_DE

def i_JP_NC_nn(*args):
  return _z80.i_JP_NC_nn(*args)
i_JP_NC_nn = _z80.i_JP_NC_nn

def i_CALL_NC_nn(*args):
  return _z80.i_CALL_NC_nn(*args)
i_CALL_NC_nn = _z80.i_CALL_NC_nn

def i_PUSH_DE(*args):
  return _z80.i_PUSH_DE(*args)
i_PUSH_DE = _z80.i_PUSH_DE

def i_SUB_A_n(*args):
  return _z80.i_SUB_A_n(*args)
i_SUB_A_n = _z80.i_SUB_A_n

def i_RST_10(*args):
  return _z80.i_RST_10(*args)
i_RST_10 = _z80.i_RST_10

def i_RET_C(*args):
  return _z80.i_RET_C(*args)
i_RET_C = _z80.i_RET_C

def i_RETI(*args):
  return _z80.i_RETI(*args)
i_RETI = _z80.i_RETI

def i_JP_C_nn(*args):
  return _z80.i_JP_C_nn(*args)
i_JP_C_nn = _z80.i_JP_C_nn

def i_CALL_C_nn(*args):
  return _z80.i_CALL_C_nn(*args)
i_CALL_C_nn = _z80.i_CALL_C_nn

def i_SBC_A_n(*args):
  return _z80.i_SBC_A_n(*args)
i_SBC_A_n = _z80.i_SBC_A_n

def i_RST_18(*args):
  return _z80.i_RST_18(*args)
i_RST_18 = _z80.i_RST_18

def i_LDH__n__A(*args):
  return _z80.i_LDH__n__A(*args)
i_LDH__n__A = _z80.i_LDH__n__A

def i_POP_HL(*args):
  return _z80.i_POP_HL(*args)
i_POP_HL = _z80.i_POP_HL

def i_LDH__C__A(*args):
  return _z80.i_LDH__C__A(*args)
i_LDH__C__A = _z80.i_LDH__C__A

def i_PUSH_HL(*args):
  return _z80.i_PUSH_HL(*args)
i_PUSH_HL = _z80.i_PUSH_HL

def i_AND_n(*args):
  return _z80.i_AND_n(*args)
i_AND_n = _z80.i_AND_n

def i_RST_20(*args):
  return _z80.i_RST_20(*args)
i_RST_20 = _z80.i_RST_20

def i_ADD_SP_d(*args):
  return _z80.i_ADD_SP_d(*args)
i_ADD_SP_d = _z80.i_ADD_SP_d

def i_JP__HL_(*args):
  return _z80.i_JP__HL_(*args)
i_JP__HL_ = _z80.i_JP__HL_

def i_LD__nn__A(*args):
  return _z80.i_LD__nn__A(*args)
i_LD__nn__A = _z80.i_LD__nn__A

def i_XOR_n(*args):
  return _z80.i_XOR_n(*args)
i_XOR_n = _z80.i_XOR_n

def i_RST_28(*args):
  return _z80.i_RST_28(*args)
i_RST_28 = _z80.i_RST_28

def i_LDH_A__n_(*args):
  return _z80.i_LDH_A__n_(*args)
i_LDH_A__n_ = _z80.i_LDH_A__n_

def i_POP_AF(*args):
  return _z80.i_POP_AF(*args)
i_POP_AF = _z80.i_POP_AF

def i_DI(*args):
  return _z80.i_DI(*args)
i_DI = _z80.i_DI

def i_PUSH_AF(*args):
  return _z80.i_PUSH_AF(*args)
i_PUSH_AF = _z80.i_PUSH_AF

def i_OR_n(*args):
  return _z80.i_OR_n(*args)
i_OR_n = _z80.i_OR_n

def i_RST_30(*args):
  return _z80.i_RST_30(*args)
i_RST_30 = _z80.i_RST_30

def i_LDHL_SP_d(*args):
  return _z80.i_LDHL_SP_d(*args)
i_LDHL_SP_d = _z80.i_LDHL_SP_d

def i_LD_SP_HL(*args):
  return _z80.i_LD_SP_HL(*args)
i_LD_SP_HL = _z80.i_LD_SP_HL

def i_LD_A__nn_(*args):
  return _z80.i_LD_A__nn_(*args)
i_LD_A__nn_ = _z80.i_LD_A__nn_

def i_EI(*args):
  return _z80.i_EI(*args)
i_EI = _z80.i_EI

def i_CP_n(*args):
  return _z80.i_CP_n(*args)
i_CP_n = _z80.i_CP_n

def i_RST_38(*args):
  return _z80.i_RST_38(*args)
i_RST_38 = _z80.i_RST_38

def i2_RLC_B(*args):
  return _z80.i2_RLC_B(*args)
i2_RLC_B = _z80.i2_RLC_B

def i2_RLC_C(*args):
  return _z80.i2_RLC_C(*args)
i2_RLC_C = _z80.i2_RLC_C

def i2_RLC_D(*args):
  return _z80.i2_RLC_D(*args)
i2_RLC_D = _z80.i2_RLC_D

def i2_RLC_E(*args):
  return _z80.i2_RLC_E(*args)
i2_RLC_E = _z80.i2_RLC_E

def i2_RLC_H(*args):
  return _z80.i2_RLC_H(*args)
i2_RLC_H = _z80.i2_RLC_H

def i2_RLC_L(*args):
  return _z80.i2_RLC_L(*args)
i2_RLC_L = _z80.i2_RLC_L

def i2_RLC__HL_(*args):
  return _z80.i2_RLC__HL_(*args)
i2_RLC__HL_ = _z80.i2_RLC__HL_

def i2_RLC_A(*args):
  return _z80.i2_RLC_A(*args)
i2_RLC_A = _z80.i2_RLC_A

def i2_RRC_B(*args):
  return _z80.i2_RRC_B(*args)
i2_RRC_B = _z80.i2_RRC_B

def i2_RRC_C(*args):
  return _z80.i2_RRC_C(*args)
i2_RRC_C = _z80.i2_RRC_C

def i2_RRC_D(*args):
  return _z80.i2_RRC_D(*args)
i2_RRC_D = _z80.i2_RRC_D

def i2_RRC_E(*args):
  return _z80.i2_RRC_E(*args)
i2_RRC_E = _z80.i2_RRC_E

def i2_RRC_H(*args):
  return _z80.i2_RRC_H(*args)
i2_RRC_H = _z80.i2_RRC_H

def i2_RRC_L(*args):
  return _z80.i2_RRC_L(*args)
i2_RRC_L = _z80.i2_RRC_L

def i2_RRC__HL_(*args):
  return _z80.i2_RRC__HL_(*args)
i2_RRC__HL_ = _z80.i2_RRC__HL_

def i2_RRC_A(*args):
  return _z80.i2_RRC_A(*args)
i2_RRC_A = _z80.i2_RRC_A

def i2_RL_B(*args):
  return _z80.i2_RL_B(*args)
i2_RL_B = _z80.i2_RL_B

def i2_RL_C(*args):
  return _z80.i2_RL_C(*args)
i2_RL_C = _z80.i2_RL_C

def i2_RL_D(*args):
  return _z80.i2_RL_D(*args)
i2_RL_D = _z80.i2_RL_D

def i2_RL_E(*args):
  return _z80.i2_RL_E(*args)
i2_RL_E = _z80.i2_RL_E

def i2_RL_H(*args):
  return _z80.i2_RL_H(*args)
i2_RL_H = _z80.i2_RL_H

def i2_RL_L(*args):
  return _z80.i2_RL_L(*args)
i2_RL_L = _z80.i2_RL_L

def i2_RL__HL_(*args):
  return _z80.i2_RL__HL_(*args)
i2_RL__HL_ = _z80.i2_RL__HL_

def i2_RL_A(*args):
  return _z80.i2_RL_A(*args)
i2_RL_A = _z80.i2_RL_A

def i2_RR_B(*args):
  return _z80.i2_RR_B(*args)
i2_RR_B = _z80.i2_RR_B

def i2_RR_C(*args):
  return _z80.i2_RR_C(*args)
i2_RR_C = _z80.i2_RR_C

def i2_RR_D(*args):
  return _z80.i2_RR_D(*args)
i2_RR_D = _z80.i2_RR_D

def i2_RR_E(*args):
  return _z80.i2_RR_E(*args)
i2_RR_E = _z80.i2_RR_E

def i2_RR_H(*args):
  return _z80.i2_RR_H(*args)
i2_RR_H = _z80.i2_RR_H

def i2_RR_L(*args):
  return _z80.i2_RR_L(*args)
i2_RR_L = _z80.i2_RR_L

def i2_RR__HL_(*args):
  return _z80.i2_RR__HL_(*args)
i2_RR__HL_ = _z80.i2_RR__HL_

def i2_RR_A(*args):
  return _z80.i2_RR_A(*args)
i2_RR_A = _z80.i2_RR_A

def i2_SLA_B(*args):
  return _z80.i2_SLA_B(*args)
i2_SLA_B = _z80.i2_SLA_B

def i2_SLA_C(*args):
  return _z80.i2_SLA_C(*args)
i2_SLA_C = _z80.i2_SLA_C

def i2_SLA_D(*args):
  return _z80.i2_SLA_D(*args)
i2_SLA_D = _z80.i2_SLA_D

def i2_SLA_E(*args):
  return _z80.i2_SLA_E(*args)
i2_SLA_E = _z80.i2_SLA_E

def i2_SLA_H(*args):
  return _z80.i2_SLA_H(*args)
i2_SLA_H = _z80.i2_SLA_H

def i2_SLA_L(*args):
  return _z80.i2_SLA_L(*args)
i2_SLA_L = _z80.i2_SLA_L

def i2_SLA__HL_(*args):
  return _z80.i2_SLA__HL_(*args)
i2_SLA__HL_ = _z80.i2_SLA__HL_

def i2_SLA_A(*args):
  return _z80.i2_SLA_A(*args)
i2_SLA_A = _z80.i2_SLA_A

def i2_SRA_B(*args):
  return _z80.i2_SRA_B(*args)
i2_SRA_B = _z80.i2_SRA_B

def i2_SRA_C(*args):
  return _z80.i2_SRA_C(*args)
i2_SRA_C = _z80.i2_SRA_C

def i2_SRA_D(*args):
  return _z80.i2_SRA_D(*args)
i2_SRA_D = _z80.i2_SRA_D

def i2_SRA_E(*args):
  return _z80.i2_SRA_E(*args)
i2_SRA_E = _z80.i2_SRA_E

def i2_SRA_H(*args):
  return _z80.i2_SRA_H(*args)
i2_SRA_H = _z80.i2_SRA_H

def i2_SRA_L(*args):
  return _z80.i2_SRA_L(*args)
i2_SRA_L = _z80.i2_SRA_L

def i2_SRA__HL_(*args):
  return _z80.i2_SRA__HL_(*args)
i2_SRA__HL_ = _z80.i2_SRA__HL_

def i2_SRA_A(*args):
  return _z80.i2_SRA_A(*args)
i2_SRA_A = _z80.i2_SRA_A

def i2_SWAP_B(*args):
  return _z80.i2_SWAP_B(*args)
i2_SWAP_B = _z80.i2_SWAP_B

def i2_SWAP_C(*args):
  return _z80.i2_SWAP_C(*args)
i2_SWAP_C = _z80.i2_SWAP_C

def i2_SWAP_D(*args):
  return _z80.i2_SWAP_D(*args)
i2_SWAP_D = _z80.i2_SWAP_D

def i2_SWAP_E(*args):
  return _z80.i2_SWAP_E(*args)
i2_SWAP_E = _z80.i2_SWAP_E

def i2_SWAP_H(*args):
  return _z80.i2_SWAP_H(*args)
i2_SWAP_H = _z80.i2_SWAP_H

def i2_SWAP_L(*args):
  return _z80.i2_SWAP_L(*args)
i2_SWAP_L = _z80.i2_SWAP_L

def i2_SWAP__HL_(*args):
  return _z80.i2_SWAP__HL_(*args)
i2_SWAP__HL_ = _z80.i2_SWAP__HL_

def i2_SWAP_A(*args):
  return _z80.i2_SWAP_A(*args)
i2_SWAP_A = _z80.i2_SWAP_A

def i2_SRL_B(*args):
  return _z80.i2_SRL_B(*args)
i2_SRL_B = _z80.i2_SRL_B

def i2_SRL_C(*args):
  return _z80.i2_SRL_C(*args)
i2_SRL_C = _z80.i2_SRL_C

def i2_SRL_D(*args):
  return _z80.i2_SRL_D(*args)
i2_SRL_D = _z80.i2_SRL_D

def i2_SRL_E(*args):
  return _z80.i2_SRL_E(*args)
i2_SRL_E = _z80.i2_SRL_E

def i2_SRL_H(*args):
  return _z80.i2_SRL_H(*args)
i2_SRL_H = _z80.i2_SRL_H

def i2_SRL_L(*args):
  return _z80.i2_SRL_L(*args)
i2_SRL_L = _z80.i2_SRL_L

def i2_SRL__HL_(*args):
  return _z80.i2_SRL__HL_(*args)
i2_SRL__HL_ = _z80.i2_SRL__HL_

def i2_SRL_A(*args):
  return _z80.i2_SRL_A(*args)
i2_SRL_A = _z80.i2_SRL_A

def i2_BIT_0_B(*args):
  return _z80.i2_BIT_0_B(*args)
i2_BIT_0_B = _z80.i2_BIT_0_B

def i2_BIT_0_C(*args):
  return _z80.i2_BIT_0_C(*args)
i2_BIT_0_C = _z80.i2_BIT_0_C

def i2_BIT_0_D(*args):
  return _z80.i2_BIT_0_D(*args)
i2_BIT_0_D = _z80.i2_BIT_0_D

def i2_BIT_0_E(*args):
  return _z80.i2_BIT_0_E(*args)
i2_BIT_0_E = _z80.i2_BIT_0_E

def i2_BIT_0_H(*args):
  return _z80.i2_BIT_0_H(*args)
i2_BIT_0_H = _z80.i2_BIT_0_H

def i2_BIT_0_L(*args):
  return _z80.i2_BIT_0_L(*args)
i2_BIT_0_L = _z80.i2_BIT_0_L

def i2_BIT_0__HL_(*args):
  return _z80.i2_BIT_0__HL_(*args)
i2_BIT_0__HL_ = _z80.i2_BIT_0__HL_

def i2_BIT_0_A(*args):
  return _z80.i2_BIT_0_A(*args)
i2_BIT_0_A = _z80.i2_BIT_0_A

def i2_BIT_1_B(*args):
  return _z80.i2_BIT_1_B(*args)
i2_BIT_1_B = _z80.i2_BIT_1_B

def i2_BIT_1_C(*args):
  return _z80.i2_BIT_1_C(*args)
i2_BIT_1_C = _z80.i2_BIT_1_C

def i2_BIT_1_D(*args):
  return _z80.i2_BIT_1_D(*args)
i2_BIT_1_D = _z80.i2_BIT_1_D

def i2_BIT_1_E(*args):
  return _z80.i2_BIT_1_E(*args)
i2_BIT_1_E = _z80.i2_BIT_1_E

def i2_BIT_1_H(*args):
  return _z80.i2_BIT_1_H(*args)
i2_BIT_1_H = _z80.i2_BIT_1_H

def i2_BIT_1_L(*args):
  return _z80.i2_BIT_1_L(*args)
i2_BIT_1_L = _z80.i2_BIT_1_L

def i2_BIT_1__HL_(*args):
  return _z80.i2_BIT_1__HL_(*args)
i2_BIT_1__HL_ = _z80.i2_BIT_1__HL_

def i2_BIT_1_A(*args):
  return _z80.i2_BIT_1_A(*args)
i2_BIT_1_A = _z80.i2_BIT_1_A

def i2_BIT_2_B(*args):
  return _z80.i2_BIT_2_B(*args)
i2_BIT_2_B = _z80.i2_BIT_2_B

def i2_BIT_2_C(*args):
  return _z80.i2_BIT_2_C(*args)
i2_BIT_2_C = _z80.i2_BIT_2_C

def i2_BIT_2_D(*args):
  return _z80.i2_BIT_2_D(*args)
i2_BIT_2_D = _z80.i2_BIT_2_D

def i2_BIT_2_E(*args):
  return _z80.i2_BIT_2_E(*args)
i2_BIT_2_E = _z80.i2_BIT_2_E

def i2_BIT_2_H(*args):
  return _z80.i2_BIT_2_H(*args)
i2_BIT_2_H = _z80.i2_BIT_2_H

def i2_BIT_2_L(*args):
  return _z80.i2_BIT_2_L(*args)
i2_BIT_2_L = _z80.i2_BIT_2_L

def i2_BIT_2__HL_(*args):
  return _z80.i2_BIT_2__HL_(*args)
i2_BIT_2__HL_ = _z80.i2_BIT_2__HL_

def i2_BIT_2_A(*args):
  return _z80.i2_BIT_2_A(*args)
i2_BIT_2_A = _z80.i2_BIT_2_A

def i2_BIT_3_B(*args):
  return _z80.i2_BIT_3_B(*args)
i2_BIT_3_B = _z80.i2_BIT_3_B

def i2_BIT_3_C(*args):
  return _z80.i2_BIT_3_C(*args)
i2_BIT_3_C = _z80.i2_BIT_3_C

def i2_BIT_3_D(*args):
  return _z80.i2_BIT_3_D(*args)
i2_BIT_3_D = _z80.i2_BIT_3_D

def i2_BIT_3_E(*args):
  return _z80.i2_BIT_3_E(*args)
i2_BIT_3_E = _z80.i2_BIT_3_E

def i2_BIT_3_H(*args):
  return _z80.i2_BIT_3_H(*args)
i2_BIT_3_H = _z80.i2_BIT_3_H

def i2_BIT_3_L(*args):
  return _z80.i2_BIT_3_L(*args)
i2_BIT_3_L = _z80.i2_BIT_3_L

def i2_BIT_3__HL_(*args):
  return _z80.i2_BIT_3__HL_(*args)
i2_BIT_3__HL_ = _z80.i2_BIT_3__HL_

def i2_BIT_3_A(*args):
  return _z80.i2_BIT_3_A(*args)
i2_BIT_3_A = _z80.i2_BIT_3_A

def i2_BIT_4_B(*args):
  return _z80.i2_BIT_4_B(*args)
i2_BIT_4_B = _z80.i2_BIT_4_B

def i2_BIT_4_C(*args):
  return _z80.i2_BIT_4_C(*args)
i2_BIT_4_C = _z80.i2_BIT_4_C

def i2_BIT_4_D(*args):
  return _z80.i2_BIT_4_D(*args)
i2_BIT_4_D = _z80.i2_BIT_4_D

def i2_BIT_4_E(*args):
  return _z80.i2_BIT_4_E(*args)
i2_BIT_4_E = _z80.i2_BIT_4_E

def i2_BIT_4_H(*args):
  return _z80.i2_BIT_4_H(*args)
i2_BIT_4_H = _z80.i2_BIT_4_H

def i2_BIT_4_L(*args):
  return _z80.i2_BIT_4_L(*args)
i2_BIT_4_L = _z80.i2_BIT_4_L

def i2_BIT_4__HL_(*args):
  return _z80.i2_BIT_4__HL_(*args)
i2_BIT_4__HL_ = _z80.i2_BIT_4__HL_

def i2_BIT_4_A(*args):
  return _z80.i2_BIT_4_A(*args)
i2_BIT_4_A = _z80.i2_BIT_4_A

def i2_BIT_5_B(*args):
  return _z80.i2_BIT_5_B(*args)
i2_BIT_5_B = _z80.i2_BIT_5_B

def i2_BIT_5_C(*args):
  return _z80.i2_BIT_5_C(*args)
i2_BIT_5_C = _z80.i2_BIT_5_C

def i2_BIT_5_D(*args):
  return _z80.i2_BIT_5_D(*args)
i2_BIT_5_D = _z80.i2_BIT_5_D

def i2_BIT_5_E(*args):
  return _z80.i2_BIT_5_E(*args)
i2_BIT_5_E = _z80.i2_BIT_5_E

def i2_BIT_5_H(*args):
  return _z80.i2_BIT_5_H(*args)
i2_BIT_5_H = _z80.i2_BIT_5_H

def i2_BIT_5_L(*args):
  return _z80.i2_BIT_5_L(*args)
i2_BIT_5_L = _z80.i2_BIT_5_L

def i2_BIT_5__HL_(*args):
  return _z80.i2_BIT_5__HL_(*args)
i2_BIT_5__HL_ = _z80.i2_BIT_5__HL_

def i2_BIT_5_A(*args):
  return _z80.i2_BIT_5_A(*args)
i2_BIT_5_A = _z80.i2_BIT_5_A

def i2_BIT_6_B(*args):
  return _z80.i2_BIT_6_B(*args)
i2_BIT_6_B = _z80.i2_BIT_6_B

def i2_BIT_6_C(*args):
  return _z80.i2_BIT_6_C(*args)
i2_BIT_6_C = _z80.i2_BIT_6_C

def i2_BIT_6_D(*args):
  return _z80.i2_BIT_6_D(*args)
i2_BIT_6_D = _z80.i2_BIT_6_D

def i2_BIT_6_E(*args):
  return _z80.i2_BIT_6_E(*args)
i2_BIT_6_E = _z80.i2_BIT_6_E

def i2_BIT_6_H(*args):
  return _z80.i2_BIT_6_H(*args)
i2_BIT_6_H = _z80.i2_BIT_6_H

def i2_BIT_6_L(*args):
  return _z80.i2_BIT_6_L(*args)
i2_BIT_6_L = _z80.i2_BIT_6_L

def i2_BIT_6__HL_(*args):
  return _z80.i2_BIT_6__HL_(*args)
i2_BIT_6__HL_ = _z80.i2_BIT_6__HL_

def i2_BIT_6_A(*args):
  return _z80.i2_BIT_6_A(*args)
i2_BIT_6_A = _z80.i2_BIT_6_A

def i2_BIT_7_B(*args):
  return _z80.i2_BIT_7_B(*args)
i2_BIT_7_B = _z80.i2_BIT_7_B

def i2_BIT_7_C(*args):
  return _z80.i2_BIT_7_C(*args)
i2_BIT_7_C = _z80.i2_BIT_7_C

def i2_BIT_7_D(*args):
  return _z80.i2_BIT_7_D(*args)
i2_BIT_7_D = _z80.i2_BIT_7_D

def i2_BIT_7_E(*args):
  return _z80.i2_BIT_7_E(*args)
i2_BIT_7_E = _z80.i2_BIT_7_E

def i2_BIT_7_H(*args):
  return _z80.i2_BIT_7_H(*args)
i2_BIT_7_H = _z80.i2_BIT_7_H

def i2_BIT_7_L(*args):
  return _z80.i2_BIT_7_L(*args)
i2_BIT_7_L = _z80.i2_BIT_7_L

def i2_BIT_7__HL_(*args):
  return _z80.i2_BIT_7__HL_(*args)
i2_BIT_7__HL_ = _z80.i2_BIT_7__HL_

def i2_BIT_7_A(*args):
  return _z80.i2_BIT_7_A(*args)
i2_BIT_7_A = _z80.i2_BIT_7_A

def i2_RES_0_B(*args):
  return _z80.i2_RES_0_B(*args)
i2_RES_0_B = _z80.i2_RES_0_B

def i2_RES_0_C(*args):
  return _z80.i2_RES_0_C(*args)
i2_RES_0_C = _z80.i2_RES_0_C

def i2_RES_0_D(*args):
  return _z80.i2_RES_0_D(*args)
i2_RES_0_D = _z80.i2_RES_0_D

def i2_RES_0_E(*args):
  return _z80.i2_RES_0_E(*args)
i2_RES_0_E = _z80.i2_RES_0_E

def i2_RES_0_H(*args):
  return _z80.i2_RES_0_H(*args)
i2_RES_0_H = _z80.i2_RES_0_H

def i2_RES_0_L(*args):
  return _z80.i2_RES_0_L(*args)
i2_RES_0_L = _z80.i2_RES_0_L

def i2_RES_0__HL_(*args):
  return _z80.i2_RES_0__HL_(*args)
i2_RES_0__HL_ = _z80.i2_RES_0__HL_

def i2_RES_0_A(*args):
  return _z80.i2_RES_0_A(*args)
i2_RES_0_A = _z80.i2_RES_0_A

def i2_RES_1_B(*args):
  return _z80.i2_RES_1_B(*args)
i2_RES_1_B = _z80.i2_RES_1_B

def i2_RES_1_C(*args):
  return _z80.i2_RES_1_C(*args)
i2_RES_1_C = _z80.i2_RES_1_C

def i2_RES_1_D(*args):
  return _z80.i2_RES_1_D(*args)
i2_RES_1_D = _z80.i2_RES_1_D

def i2_RES_1_E(*args):
  return _z80.i2_RES_1_E(*args)
i2_RES_1_E = _z80.i2_RES_1_E

def i2_RES_1_H(*args):
  return _z80.i2_RES_1_H(*args)
i2_RES_1_H = _z80.i2_RES_1_H

def i2_RES_1_L(*args):
  return _z80.i2_RES_1_L(*args)
i2_RES_1_L = _z80.i2_RES_1_L

def i2_RES_1__HL_(*args):
  return _z80.i2_RES_1__HL_(*args)
i2_RES_1__HL_ = _z80.i2_RES_1__HL_

def i2_RES_1_A(*args):
  return _z80.i2_RES_1_A(*args)
i2_RES_1_A = _z80.i2_RES_1_A

def i2_RES_2_B(*args):
  return _z80.i2_RES_2_B(*args)
i2_RES_2_B = _z80.i2_RES_2_B

def i2_RES_2_C(*args):
  return _z80.i2_RES_2_C(*args)
i2_RES_2_C = _z80.i2_RES_2_C

def i2_RES_2_D(*args):
  return _z80.i2_RES_2_D(*args)
i2_RES_2_D = _z80.i2_RES_2_D

def i2_RES_2_E(*args):
  return _z80.i2_RES_2_E(*args)
i2_RES_2_E = _z80.i2_RES_2_E

def i2_RES_2_H(*args):
  return _z80.i2_RES_2_H(*args)
i2_RES_2_H = _z80.i2_RES_2_H

def i2_RES_2_L(*args):
  return _z80.i2_RES_2_L(*args)
i2_RES_2_L = _z80.i2_RES_2_L

def i2_RES_2__HL_(*args):
  return _z80.i2_RES_2__HL_(*args)
i2_RES_2__HL_ = _z80.i2_RES_2__HL_

def i2_RES_2_A(*args):
  return _z80.i2_RES_2_A(*args)
i2_RES_2_A = _z80.i2_RES_2_A

def i2_RES_3_B(*args):
  return _z80.i2_RES_3_B(*args)
i2_RES_3_B = _z80.i2_RES_3_B

def i2_RES_3_C(*args):
  return _z80.i2_RES_3_C(*args)
i2_RES_3_C = _z80.i2_RES_3_C

def i2_RES_3_D(*args):
  return _z80.i2_RES_3_D(*args)
i2_RES_3_D = _z80.i2_RES_3_D

def i2_RES_3_E(*args):
  return _z80.i2_RES_3_E(*args)
i2_RES_3_E = _z80.i2_RES_3_E

def i2_RES_3_H(*args):
  return _z80.i2_RES_3_H(*args)
i2_RES_3_H = _z80.i2_RES_3_H

def i2_RES_3_L(*args):
  return _z80.i2_RES_3_L(*args)
i2_RES_3_L = _z80.i2_RES_3_L

def i2_RES_3__HL_(*args):
  return _z80.i2_RES_3__HL_(*args)
i2_RES_3__HL_ = _z80.i2_RES_3__HL_

def i2_RES_3_A(*args):
  return _z80.i2_RES_3_A(*args)
i2_RES_3_A = _z80.i2_RES_3_A

def i2_RES_4_B(*args):
  return _z80.i2_RES_4_B(*args)
i2_RES_4_B = _z80.i2_RES_4_B

def i2_RES_4_C(*args):
  return _z80.i2_RES_4_C(*args)
i2_RES_4_C = _z80.i2_RES_4_C

def i2_RES_4_D(*args):
  return _z80.i2_RES_4_D(*args)
i2_RES_4_D = _z80.i2_RES_4_D

def i2_RES_4_E(*args):
  return _z80.i2_RES_4_E(*args)
i2_RES_4_E = _z80.i2_RES_4_E

def i2_RES_4_H(*args):
  return _z80.i2_RES_4_H(*args)
i2_RES_4_H = _z80.i2_RES_4_H

def i2_RES_4_L(*args):
  return _z80.i2_RES_4_L(*args)
i2_RES_4_L = _z80.i2_RES_4_L

def i2_RES_4__HL_(*args):
  return _z80.i2_RES_4__HL_(*args)
i2_RES_4__HL_ = _z80.i2_RES_4__HL_

def i2_RES_4_A(*args):
  return _z80.i2_RES_4_A(*args)
i2_RES_4_A = _z80.i2_RES_4_A

def i2_RES_5_B(*args):
  return _z80.i2_RES_5_B(*args)
i2_RES_5_B = _z80.i2_RES_5_B

def i2_RES_5_C(*args):
  return _z80.i2_RES_5_C(*args)
i2_RES_5_C = _z80.i2_RES_5_C

def i2_RES_5_D(*args):
  return _z80.i2_RES_5_D(*args)
i2_RES_5_D = _z80.i2_RES_5_D

def i2_RES_5_E(*args):
  return _z80.i2_RES_5_E(*args)
i2_RES_5_E = _z80.i2_RES_5_E

def i2_RES_5_H(*args):
  return _z80.i2_RES_5_H(*args)
i2_RES_5_H = _z80.i2_RES_5_H

def i2_RES_5_L(*args):
  return _z80.i2_RES_5_L(*args)
i2_RES_5_L = _z80.i2_RES_5_L

def i2_RES_5__HL_(*args):
  return _z80.i2_RES_5__HL_(*args)
i2_RES_5__HL_ = _z80.i2_RES_5__HL_

def i2_RES_5_A(*args):
  return _z80.i2_RES_5_A(*args)
i2_RES_5_A = _z80.i2_RES_5_A

def i2_RES_6_B(*args):
  return _z80.i2_RES_6_B(*args)
i2_RES_6_B = _z80.i2_RES_6_B

def i2_RES_6_C(*args):
  return _z80.i2_RES_6_C(*args)
i2_RES_6_C = _z80.i2_RES_6_C

def i2_RES_6_D(*args):
  return _z80.i2_RES_6_D(*args)
i2_RES_6_D = _z80.i2_RES_6_D

def i2_RES_6_E(*args):
  return _z80.i2_RES_6_E(*args)
i2_RES_6_E = _z80.i2_RES_6_E

def i2_RES_6_H(*args):
  return _z80.i2_RES_6_H(*args)
i2_RES_6_H = _z80.i2_RES_6_H

def i2_RES_6_L(*args):
  return _z80.i2_RES_6_L(*args)
i2_RES_6_L = _z80.i2_RES_6_L

def i2_RES_6__HL_(*args):
  return _z80.i2_RES_6__HL_(*args)
i2_RES_6__HL_ = _z80.i2_RES_6__HL_

def i2_RES_6_A(*args):
  return _z80.i2_RES_6_A(*args)
i2_RES_6_A = _z80.i2_RES_6_A

def i2_RES_7_B(*args):
  return _z80.i2_RES_7_B(*args)
i2_RES_7_B = _z80.i2_RES_7_B

def i2_RES_7_C(*args):
  return _z80.i2_RES_7_C(*args)
i2_RES_7_C = _z80.i2_RES_7_C

def i2_RES_7_D(*args):
  return _z80.i2_RES_7_D(*args)
i2_RES_7_D = _z80.i2_RES_7_D

def i2_RES_7_E(*args):
  return _z80.i2_RES_7_E(*args)
i2_RES_7_E = _z80.i2_RES_7_E

def i2_RES_7_H(*args):
  return _z80.i2_RES_7_H(*args)
i2_RES_7_H = _z80.i2_RES_7_H

def i2_RES_7_L(*args):
  return _z80.i2_RES_7_L(*args)
i2_RES_7_L = _z80.i2_RES_7_L

def i2_RES_7__HL_(*args):
  return _z80.i2_RES_7__HL_(*args)
i2_RES_7__HL_ = _z80.i2_RES_7__HL_

def i2_RES_7_A(*args):
  return _z80.i2_RES_7_A(*args)
i2_RES_7_A = _z80.i2_RES_7_A

def i2_SET_0_B(*args):
  return _z80.i2_SET_0_B(*args)
i2_SET_0_B = _z80.i2_SET_0_B

def i2_SET_0_C(*args):
  return _z80.i2_SET_0_C(*args)
i2_SET_0_C = _z80.i2_SET_0_C

def i2_SET_0_D(*args):
  return _z80.i2_SET_0_D(*args)
i2_SET_0_D = _z80.i2_SET_0_D

def i2_SET_0_E(*args):
  return _z80.i2_SET_0_E(*args)
i2_SET_0_E = _z80.i2_SET_0_E

def i2_SET_0_H(*args):
  return _z80.i2_SET_0_H(*args)
i2_SET_0_H = _z80.i2_SET_0_H

def i2_SET_0_L(*args):
  return _z80.i2_SET_0_L(*args)
i2_SET_0_L = _z80.i2_SET_0_L

def i2_SET_0__HL_(*args):
  return _z80.i2_SET_0__HL_(*args)
i2_SET_0__HL_ = _z80.i2_SET_0__HL_

def i2_SET_0_A(*args):
  return _z80.i2_SET_0_A(*args)
i2_SET_0_A = _z80.i2_SET_0_A

def i2_SET_1_B(*args):
  return _z80.i2_SET_1_B(*args)
i2_SET_1_B = _z80.i2_SET_1_B

def i2_SET_1_C(*args):
  return _z80.i2_SET_1_C(*args)
i2_SET_1_C = _z80.i2_SET_1_C

def i2_SET_1_D(*args):
  return _z80.i2_SET_1_D(*args)
i2_SET_1_D = _z80.i2_SET_1_D

def i2_SET_1_E(*args):
  return _z80.i2_SET_1_E(*args)
i2_SET_1_E = _z80.i2_SET_1_E

def i2_SET_1_H(*args):
  return _z80.i2_SET_1_H(*args)
i2_SET_1_H = _z80.i2_SET_1_H

def i2_SET_1_L(*args):
  return _z80.i2_SET_1_L(*args)
i2_SET_1_L = _z80.i2_SET_1_L

def i2_SET_1__HL_(*args):
  return _z80.i2_SET_1__HL_(*args)
i2_SET_1__HL_ = _z80.i2_SET_1__HL_

def i2_SET_1_A(*args):
  return _z80.i2_SET_1_A(*args)
i2_SET_1_A = _z80.i2_SET_1_A

def i2_SET_2_B(*args):
  return _z80.i2_SET_2_B(*args)
i2_SET_2_B = _z80.i2_SET_2_B

def i2_SET_2_C(*args):
  return _z80.i2_SET_2_C(*args)
i2_SET_2_C = _z80.i2_SET_2_C

def i2_SET_2_D(*args):
  return _z80.i2_SET_2_D(*args)
i2_SET_2_D = _z80.i2_SET_2_D

def i2_SET_2_E(*args):
  return _z80.i2_SET_2_E(*args)
i2_SET_2_E = _z80.i2_SET_2_E

def i2_SET_2_H(*args):
  return _z80.i2_SET_2_H(*args)
i2_SET_2_H = _z80.i2_SET_2_H

def i2_SET_2_L(*args):
  return _z80.i2_SET_2_L(*args)
i2_SET_2_L = _z80.i2_SET_2_L

def i2_SET_2__HL_(*args):
  return _z80.i2_SET_2__HL_(*args)
i2_SET_2__HL_ = _z80.i2_SET_2__HL_

def i2_SET_2_A(*args):
  return _z80.i2_SET_2_A(*args)
i2_SET_2_A = _z80.i2_SET_2_A

def i2_SET_3_B(*args):
  return _z80.i2_SET_3_B(*args)
i2_SET_3_B = _z80.i2_SET_3_B

def i2_SET_3_C(*args):
  return _z80.i2_SET_3_C(*args)
i2_SET_3_C = _z80.i2_SET_3_C

def i2_SET_3_D(*args):
  return _z80.i2_SET_3_D(*args)
i2_SET_3_D = _z80.i2_SET_3_D

def i2_SET_3_E(*args):
  return _z80.i2_SET_3_E(*args)
i2_SET_3_E = _z80.i2_SET_3_E

def i2_SET_3_H(*args):
  return _z80.i2_SET_3_H(*args)
i2_SET_3_H = _z80.i2_SET_3_H

def i2_SET_3_L(*args):
  return _z80.i2_SET_3_L(*args)
i2_SET_3_L = _z80.i2_SET_3_L

def i2_SET_3__HL_(*args):
  return _z80.i2_SET_3__HL_(*args)
i2_SET_3__HL_ = _z80.i2_SET_3__HL_

def i2_SET_3_A(*args):
  return _z80.i2_SET_3_A(*args)
i2_SET_3_A = _z80.i2_SET_3_A

def i2_SET_4_B(*args):
  return _z80.i2_SET_4_B(*args)
i2_SET_4_B = _z80.i2_SET_4_B

def i2_SET_4_C(*args):
  return _z80.i2_SET_4_C(*args)
i2_SET_4_C = _z80.i2_SET_4_C

def i2_SET_4_D(*args):
  return _z80.i2_SET_4_D(*args)
i2_SET_4_D = _z80.i2_SET_4_D

def i2_SET_4_E(*args):
  return _z80.i2_SET_4_E(*args)
i2_SET_4_E = _z80.i2_SET_4_E

def i2_SET_4_H(*args):
  return _z80.i2_SET_4_H(*args)
i2_SET_4_H = _z80.i2_SET_4_H

def i2_SET_4_L(*args):
  return _z80.i2_SET_4_L(*args)
i2_SET_4_L = _z80.i2_SET_4_L

def i2_SET_4__HL_(*args):
  return _z80.i2_SET_4__HL_(*args)
i2_SET_4__HL_ = _z80.i2_SET_4__HL_

def i2_SET_4_A(*args):
  return _z80.i2_SET_4_A(*args)
i2_SET_4_A = _z80.i2_SET_4_A

def i2_SET_5_B(*args):
  return _z80.i2_SET_5_B(*args)
i2_SET_5_B = _z80.i2_SET_5_B

def i2_SET_5_C(*args):
  return _z80.i2_SET_5_C(*args)
i2_SET_5_C = _z80.i2_SET_5_C

def i2_SET_5_D(*args):
  return _z80.i2_SET_5_D(*args)
i2_SET_5_D = _z80.i2_SET_5_D

def i2_SET_5_E(*args):
  return _z80.i2_SET_5_E(*args)
i2_SET_5_E = _z80.i2_SET_5_E

def i2_SET_5_H(*args):
  return _z80.i2_SET_5_H(*args)
i2_SET_5_H = _z80.i2_SET_5_H

def i2_SET_5_L(*args):
  return _z80.i2_SET_5_L(*args)
i2_SET_5_L = _z80.i2_SET_5_L

def i2_SET_5__HL_(*args):
  return _z80.i2_SET_5__HL_(*args)
i2_SET_5__HL_ = _z80.i2_SET_5__HL_

def i2_SET_5_A(*args):
  return _z80.i2_SET_5_A(*args)
i2_SET_5_A = _z80.i2_SET_5_A

def i2_SET_6_B(*args):
  return _z80.i2_SET_6_B(*args)
i2_SET_6_B = _z80.i2_SET_6_B

def i2_SET_6_C(*args):
  return _z80.i2_SET_6_C(*args)
i2_SET_6_C = _z80.i2_SET_6_C

def i2_SET_6_D(*args):
  return _z80.i2_SET_6_D(*args)
i2_SET_6_D = _z80.i2_SET_6_D

def i2_SET_6_E(*args):
  return _z80.i2_SET_6_E(*args)
i2_SET_6_E = _z80.i2_SET_6_E

def i2_SET_6_H(*args):
  return _z80.i2_SET_6_H(*args)
i2_SET_6_H = _z80.i2_SET_6_H

def i2_SET_6_L(*args):
  return _z80.i2_SET_6_L(*args)
i2_SET_6_L = _z80.i2_SET_6_L

def i2_SET_6__HL_(*args):
  return _z80.i2_SET_6__HL_(*args)
i2_SET_6__HL_ = _z80.i2_SET_6__HL_

def i2_SET_6_A(*args):
  return _z80.i2_SET_6_A(*args)
i2_SET_6_A = _z80.i2_SET_6_A

def i2_SET_7_B(*args):
  return _z80.i2_SET_7_B(*args)
i2_SET_7_B = _z80.i2_SET_7_B

def i2_SET_7_C(*args):
  return _z80.i2_SET_7_C(*args)
i2_SET_7_C = _z80.i2_SET_7_C

def i2_SET_7_D(*args):
  return _z80.i2_SET_7_D(*args)
i2_SET_7_D = _z80.i2_SET_7_D

def i2_SET_7_E(*args):
  return _z80.i2_SET_7_E(*args)
i2_SET_7_E = _z80.i2_SET_7_E

def i2_SET_7_H(*args):
  return _z80.i2_SET_7_H(*args)
i2_SET_7_H = _z80.i2_SET_7_H

def i2_SET_7_L(*args):
  return _z80.i2_SET_7_L(*args)
i2_SET_7_L = _z80.i2_SET_7_L

def i2_SET_7__HL_(*args):
  return _z80.i2_SET_7__HL_(*args)
i2_SET_7__HL_ = _z80.i2_SET_7__HL_

def i2_SET_7_A(*args):
  return _z80.i2_SET_7_A(*args)
i2_SET_7_A = _z80.i2_SET_7_A
# This file is compatible with both classic and new-style classes.


